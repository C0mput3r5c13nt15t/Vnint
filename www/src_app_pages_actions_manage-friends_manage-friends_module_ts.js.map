{"version":3,"file":"src_app_pages_actions_manage-friends_manage-friends_module_ts.js","mappings":";;;;;;;;;;;;;AAAA,iEAAe,oIAAoI,6CAA6C,gTAAgT,2DAA2D,snBAAsnB,8BAA8B,iGAAiG,2DAA2D,0DAA0D,+IAA+I,gBAAgB,mDAAmD,0DAA0D,8BAA8B,8TAA8T,4DAA4D,kYAAkY,2DAA2D,unBAAunB,6BAA6B,iGAAiG,2DAA2D,0DAA0D,+IAA+I,gBAAgB,qDAAqD,0DAA0D,6BAA6B,mWAAmW,4DAA4D,wQAAwQ,4DAA4D,+ZAA+Z,iDAAiD,6iBAA6iB,oEAAoE,sGAAsG,wDAAwD,uGAAuG,oDAAoD,4GAA4G,0DAA0D,4lBAA4lB,kCAAkC,wuBAAwuB,mDAAmD,2QAA2Q;;;;;;;;;;;;;;;;;;;ACAzgP;AACc;AAEG;AAE1D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mEAAiB;KAC7B;CACF,CAAC;IAMW,8BAA8B,SAA9B,8BAA8B;CAAG;AAAjC,8BAA8B;IAJ1C,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,8BAA8B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBF;AACM;AACiB;AACd;AAEL;AAE0B;AAEU;AACR;AAEf;AAED;IAoB5C,uBAAuB,SAAvB,uBAAuB;CAAG;AAA1B,uBAAuB;IAlBnC,uDAAQ,CAAC;QACN,OAAO,EAAE;YACL,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,0FAA8B;YAC9B,2EAAgB;YAChB,yEAAwB,CAAC;gBACrB,MAAM,EAAE;oBACJ,OAAO,EAAE,gEAAe;oBACxB,UAAU,EAAE,qEAAqB;oBACjC,IAAI,EAAE,CAAC,6DAAU,CAAC;iBACrB;aACJ,CAAC;YACF,+DAAmB;SACtB;QACH,YAAY,EAAE,CAAC,mEAAiB,CAAC;KAClC,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCc;AACD;AACM;AAEiB;AACV;AACD;AACO;IAOvD,iBAAiB,SAAjB,iBAAiB;IAM5B,YAAoB,WAAwB,EACxB,SAA0B,EAC1B,SAA2B,EAC3B,iBAAoC,EACpC,YAA0B,EAC1B,YAA0B;QAL1B,gBAAW,GAAX,WAAW,CAAa;QACxB,cAAS,GAAT,SAAS,CAAiB;QAC1B,cAAS,GAAT,SAAS,CAAkB;QAC3B,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,iBAAY,GAAZ,YAAY,CAAc;QAT9C,gBAAW,GAAG,KAAK,CAAC;QACpB,wBAAmB,GAAiB,EAAE,CAAC;QACvC,yBAAoB,GAAiB,EAAE,CAAC;IAOU,CAAC;IAEnD,QAAQ;QACN,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC1C,gBAAgB,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAC3C,GAAG,EAAE,EAAE;SACR,CAAC,CAAC;IACL,CAAC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;IACrC,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,UAAU,EAAE;IACnB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,iBAAiB,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAAC;YACzD,KAAK,EAAE,KAAK,CAAC,EAAE;gBACb,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9C,CAAC;YACD,IAAI,EAAE,QAAQ,CAAC,EAAE;gBACf,MAAM,IAAI,GAAQ,QAAQ,CAAC;gBAC3B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;gBACpD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC;YACxD,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,YAAY,CAAC,YAAY;QACvB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC;YAC9D,KAAK,EAAE,KAAK,CAAC,EAAE;gBACb,IAAI,KAAK,CAAC,KAAK,CAAC,OAAO,IAAI,oBAAoB,EAAE;oBAC/C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mCAAmC,CAAC,EAAE,EAAE,EAAE,aAAa,CAAC,CAAC;iBACnH;qBAAM;oBACL,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC7C;YACH,CAAC;YACD,IAAI,EAAE,QAAQ,CAAC,EAAE;gBACf,MAAM,IAAI,GAAQ,QAAQ,CAAC;gBAC3B,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,8BAA8B,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC;YACvH,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE;gBACb,IAAI,CAAC,UAAU,EAAE,CAAC;YACpB,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,SAAS;QACP,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;YAC7D,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,EAAC,gBAAgB,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,gBAAgB,EAAC,CAAC,CAAC,SAAS,CAAC;gBAC/G,KAAK,EAAE,KAAK,CAAC,EAAE;oBACb,IAAI,KAAK,CAAC,KAAK,CAAC,OAAO,IAAI,6BAA6B,EAAE;wBACxD,KAAK,MAAM,SAAS,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE;4BAC1C,MAAM,MAAM,GAAQ,EAAE,CAAC;4BACvB,KAAK,MAAM,YAAY,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE;gCACxD,MAAM,CAAC,IAAI,CAAC,EAAC,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,EAAC,CAAC,CAAC;6BACpE;4BACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;4BACxC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;yBAC1D;qBACF;yBAAM,IAAI,KAAK,CAAC,KAAK,CAAC,OAAO,IAAI,oBAAoB,EAAE;wBACtD,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mCAAmC,CAAC,EAAE,EAAE,EAAE,aAAa,CAAC,CAAC;qBACnH;yBAAM;wBACL,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBAC7C;oBACD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBAC3B,CAAC;gBACD,IAAI,EAAE,QAAQ,CAAC,EAAE;oBACf,MAAM,IAAI,GAAQ,QAAQ,CAAC;oBAC3B,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,8BAA8B,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC;gBACvH,CAAC;gBACD,QAAQ,EAAE,GAAG,EAAE;oBACb,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;oBAC1B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;oBACzB,IAAI,CAAC,UAAU,EAAE,CAAC;gBACpB,CAAC;aACF,CAAC,CAAC;SACJ;IACH,CAAC;IAED,YAAY,CAAC,YAAY;QACvB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC;YAC9D,KAAK,EAAE,KAAK,CAAC,EAAE;gBACb,IAAI,KAAK,CAAC,KAAK,CAAC,OAAO,IAAI,oBAAoB,EAAE;oBAC/C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mCAAmC,CAAC,EAAE,EAAE,EAAE,aAAa,CAAC,CAAC;iBACnH;qBAAM;oBACL,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC7C;YACH,CAAC;YACD,IAAI,EAAE,QAAQ,CAAC,EAAE;gBACf,MAAM,IAAI,GAAQ,QAAQ,CAAC;gBAC3B,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,8BAA8B,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC;YACvH,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;gBAC/B,IAAI,CAAC,UAAU,EAAE,CAAC;YACpB,CAAC;SACF,CAAC,CAAC;IACL,CAAC;CAEF;;YAzH+B,uDAAW;YANlC,2DAAe;YACf,iEAAgB;YAEhB,kFAAiB;YACjB,wEAAY;YACb,iEAAY;;AAQP,iBAAiB;IAL7B,wDAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,6MAAyC;;KAE1C,CAAC;GACW,iBAAiB,CAkH7B;AAlH6B","sources":["./src/app/pages/actions/manage-friends/manage-friends.page.html","./src/app/pages/actions/manage-friends/manage-friends-routing.module.ts","./src/app/pages/actions/manage-friends/manage-friends.module.ts","./src/app/pages/actions/manage-friends/manage-friends.page.ts"],"sourcesContent":["export default \"<ion-content>\\n  <app-toolbar></app-toolbar>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col>\\n        <app-card-title-bar title=\\\"{{ 'ACTIONS.MANAGE_FRIENDS.title' | translate }}\\\"></app-card-title-bar>\\n        <ion-card color=\\\"light\\\">\\n          <ion-card-content>\\n            <ion-grid class=\\\"inside-card-grid\\\">\\n              <ion-row>\\n                <ion-col>\\n                  <ng-container *ngIf=\\\"offered_friendships.length > 0\\\">\\n                    <ion-label>{{ 'ACTIONS.MANAGE_FRIENDS.proposedFriendships' | translate }}</ion-label>\\n                    <ion-card *ngFor=\\\"let friendship of offered_friendships\\\">\\n                      <ion-item color=\\\"light\\\">\\n                        <ion-icon *ngIf=\\\"friendship.state == 0\\\" color=\\\"danger\\\" slot=\\\"start\\\" name=\\\"hourglass\\\"></ion-icon>\\n                        <ion-icon *ngIf=\\\"friendship.state == 1\\\" color=\\\"warning\\\" slot=\\\"start\\\" name=\\\"checkmark\\\"></ion-icon>\\n                        <ion-icon *ngIf=\\\"friendship.state == 2\\\" color=\\\"success\\\" slot=\\\"start\\\" name=\\\"checkmark-done\\\"></ion-icon>\\n                        <ion-card-header>\\n                          <ion-card-title>{{ friendship.respondent.email }}</ion-card-title>\\n                          <ion-card-subtitle>\\n                            {{ 'ACTIONS.MANAGE_FRIENDS.FRIENDS.proposedOn' | translate }} <ion-label color=\\\"primary\\\" class=\\\"subtitle-labels\\\">{{ friendship.created_at | date:( 'GENERAL.timeDisplayFormat' | translate ):( 'GENERAL.timezone' | translate ):( 'GENERAL.locale' | translate ) }}</ion-label> {{ 'ACTIONS.MANAGE_FRIENDS.FRIENDS.to' | translate }} <ion-label color=\\\"primary\\\" class=\\\"subtitle-labels\\\">{{ friendship.respondent.email }}</ion-label>\\n                          </ion-card-subtitle>\\n                          <ion-card-subtitle>\\n                            <ion-chip color=\\\"danger\\\" (click)=\\\"removeFriend(friendship.id)\\\">\\n                              <ion-icon name=\\\"close\\\"></ion-icon>\\n                              <ion-label>{{ 'ACTIONS.MANAGE_FRIENDS.FRIENDS.removeFriend' | translate }}</ion-label>\\n                            </ion-chip>\\n                          </ion-card-subtitle>\\n                        </ion-card-header>\\n                      </ion-item>\\n                    </ion-card>\\n                    <br>\\n                  </ng-container>\\n                  <ng-container *ngIf=\\\"received_friendships.length > 0\\\">\\n                    <ion-label>{{ 'ACTIONS.MANAGE_FRIENDS.receivedFriendships' | translate }}</ion-label>\\n                    <ion-card *ngFor=\\\"let friendship of received_friendships\\\">\\n                      <ion-item color=\\\"light\\\">\\n                        <ion-icon *ngIf=\\\"friendship.state == 0\\\" color=\\\"danger\\\" slot=\\\"start\\\" name=\\\"hourglass\\\"></ion-icon>\\n                        <ion-icon *ngIf=\\\"friendship.state == 1\\\" color=\\\"warning\\\" slot=\\\"start\\\" name=\\\"checkmark\\\"></ion-icon>\\n                        <ion-icon *ngIf=\\\"friendship.state == 2\\\" color=\\\"success\\\" slot=\\\"start\\\" name=\\\"checkmark-done\\\"></ion-icon>\\n                        <ion-card-header>\\n                          <ion-card-title>{{ friendship.applicant.email }}</ion-card-title>\\n                          <ion-card-subtitle>\\n                            {{ 'ACTIONS.MANAGE_FRIENDS.FRIENDS.receivedOn' | translate }} <ion-label color=\\\"primary\\\" class=\\\"subtitle-labels\\\">{{ friendship.created_at | date:( 'GENERAL.timeDisplayFormat' | translate ):( 'GENERAL.timezone' | translate ):( 'GENERAL.locale' | translate ) }}</ion-label> {{ 'ACTIONS.MANAGE_FRIENDS.FRIENDS.from' | translate }} <ion-label color=\\\"primary\\\" class=\\\"subtitle-labels\\\">{{ friendship.applicant.email }}</ion-label>\\n                          </ion-card-subtitle>\\n                          <ion-card-subtitle>\\n                            <ion-chip *ngIf=\\\"friendship.state == 0\\\" color=\\\"success\\\" (click)=\\\"acceptFriend(friendship.id)\\\">\\n                              <ion-icon name=\\\"checkmark\\\"></ion-icon>\\n                              <ion-label>{{ 'ACTIONS.MANAGE_FRIENDS.FRIENDS.acceptFriend' | translate }}</ion-label>\\n                            </ion-chip>\\n                            <ion-chip color=\\\"danger\\\" (click)=\\\"removeFriend(friendship.id)\\\">\\n                              <ion-icon name=\\\"close\\\"></ion-icon>\\n                              <ion-label>{{ 'ACTIONS.MANAGE_FRIENDS.FRIENDS.removeFriend' | translate }}</ion-label>\\n                            </ion-chip>\\n                          </ion-card-subtitle>\\n                        </ion-card-header>\\n                      </ion-item>\\n                    </ion-card><br>\\n                  </ng-container>\\n                  <ng-container *ngIf=\\\"offered_friendships.length == 0 && received_friendships.length == 0\\\">\\n                    <app-empty-card message=\\\"{{ 'ACTIONS.MANAGE_FRIENDS.noFriends' | translate }}\\\"></app-empty-card><br>\\n                  </ng-container>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col *ngIf=\\\"offered_friendships.length > 0 || received_friendships.length > 0\\\">\\n        <ion-card color=\\\"light\\\">\\n          <ion-card-content>\\n            <ion-grid class=\\\"inside-card-grid\\\">\\n              <ion-row>\\n                <ion-col>\\n                  <ion-label>\\n                    {{ 'ACTIONS.MANAGE_FRIENDS.LEGEND.yourFriendshipRequest' | translate }}<br>\\n                    <ion-icon color=\\\"danger\\\" slot=\\\"start\\\" name=\\\"hourglass\\\"></ion-icon> {{ 'ACTIONS.MANAGE_FRIENDS.LEGEND.hourglass' | translate }}<br>\\n                    <ion-icon color=\\\"warning\\\" slot=\\\"start\\\" name=\\\"checkmark\\\"></ion-icon> {{ 'ACTIONS.MANAGE_FRIENDS.LEGEND.check' | translate }}<br>\\n                    <ion-icon color=\\\"success\\\" slot=\\\"start\\\" name=\\\"checkmark-done\\\"></ion-icon> {{ 'ACTIONS.MANAGE_FRIENDS.LEGEND.doubleCheck' | translate }}\\n                  </ion-label>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n      <ion-col>\\n        <ion-card color=\\\"light\\\">\\n          <ion-card-content>\\n            <ion-grid class=\\\"inside-card-grid\\\">\\n              <ion-row>\\n                <ion-col>\\n                  <form [formGroup]=\\\"addFriendForm\\\" (ngSubmit)=\\\"addFriend()\\\">\\n\\n                    <ion-item color=\\\"light\\\">\\n                      <ion-input type=\\\"email\\\" formControlName=\\\"respondent_email\\\" placeholder=\\\"{{ 'LOGIN.INPUT.email' | translate }}\\\"></ion-input>\\n                    </ion-item>\\n                    <app-form-error [errors]=\\\"errorControl.respondent_email.errors\\\"></app-form-error>\\n\\n                    <ion-checkbox class=\\\"invisible\\\" formControlName=\\\"fax\\\"></ion-checkbox>\\n\\n                    <div class=\\\"ion-padding\\\">\\n                      <ion-button *ngIf=\\\"isProcessed\\\" type=\\\"submit\\\" [disabled]=\\\"addFriendForm.invalid || isProcessed\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\" color=\\\"primary\\\"><ion-spinner name=\\\"crescent\\\"></ion-spinner></ion-button>\\n                      <ion-button *ngIf=\\\"!isProcessed\\\" color=\\\"primary\\\" [disabled]=\\\"addFriendForm.invalid\\\" (click)=\\\"addFriend()\\\" expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\">+ {{ 'ACTIONS.MANAGE_FRIENDS.FRIENDS.add' | translate }}</ion-button>\\n                    </div>\\n                  </form>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ManageFriendsPage } from './manage-friends.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ManageFriendsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ManageFriendsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\n\nimport { ManageFriendsPageRoutingModule } from './manage-friends-routing.module';\nimport { ComponentsModule } from '../../../components/components.module';\n\nimport { ManageFriendsPage } from './manage-friends.page';\n\nimport {createTranslateLoader} from \"src/app/app.module\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        ManageFriendsPageRoutingModule,\n        ComponentsModule,\n        TranslateModule.forChild({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: createTranslateLoader,\n                deps: [HttpClient]\n            }\n        }),\n        ReactiveFormsModule\n    ],\n  declarations: [ManageFriendsPage]\n})\nexport class ManageFriendsPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Friendship } from 'src/app/interfaces/friendship';\nimport { FriendshipService } from 'src/app/services/friendship.service';\nimport { ErrorService } from 'src/app/services/error.service';\nimport {AlertService} from \"../../../services/alert.service\";\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-manage-friends',\n  templateUrl: './manage-friends.page.html',\n  styleUrls: ['./manage-friends.page.scss'],\n})\nexport class ManageFriendsPage implements OnInit {\n  addFriendForm: FormGroup;\n  isProcessed = false;\n  offered_friendships: Friendship[] = [];\n  received_friendships: Friendship[] = [];\n\n  constructor(private formBuilder: FormBuilder,\n              private alertCtrl: AlertController,\n              private translate: TranslateService,\n              private friendshipService: FriendshipService,\n              private errorService: ErrorService,\n              private alertService: AlertService) { }\n\n  ngOnInit() {\n    this.addFriendForm = this.formBuilder.group({\n      respondent_email: ['', Validators.required],\n      fax: []\n    });\n  }\n\n  get errorControl() {\n    return this.addFriendForm.controls;\n  }\n\n  ionViewWillEnter() {\n    this.getFriends()\n  }\n\n  getFriends() {\n    this.friendshipService.getAssociatedFriendship().subscribe({\n      error: error => {\n        this.errorService.errorOccurred.emit(error);\n      },\n      next: response => {\n        const resp: any = response;\n        this.offered_friendships = resp.offered_friendships;\n        this.received_friendships = resp.received_friendships;\n      },\n    });\n  }\n\n  removeFriend(friendshipId) {\n    this.friendshipService.deleteFriendship(friendshipId).subscribe({\n      error: error => {\n        if (error.error.message == 'missingPermissions') {\n          this.alertService.alert(\"danger\", this.translate.instant('GENERAL.ERRORS.missingPermissions'), '', 'lock-closed');\n        } else {\n          this.errorService.errorOccurred.emit(error);\n        }\n      },\n      next: response => {\n        const resp: any = response;\n        this.alertService.alert(\"success\", this.translate.instant('ACTIONS.MANAGE_FRIENDS.title'), resp.message, \"checkmark\")\n      },\n      complete: () => {\n        this.getFriends();\n      },\n    });\n  }\n\n  addFriend() {\n    this.isProcessed = true;\n    if (!this.addFriendForm.value.fax && this.addFriendForm.valid) {\n      this.friendshipService.createFriendship({respondent_email: this.addFriendForm.value.respondent_email}).subscribe({\n        error: error => {\n          if (error.error.message == 'The given data was invalid.') {\n            for (const errorType in error.error.errors) {\n              const errors: any = [];\n              for (const errorMessage in error.error.errors[errorType]) {\n                errors.push({[error.error.errors[errorType][errorMessage]]: true});\n              }\n              console.log(this.addFriendForm.controls)\n              this.addFriendForm.controls[errorType].setErrors(errors);\n            }\n          } else if (error.error.message == 'missingPermissions') {\n            this.alertService.alert(\"danger\", this.translate.instant('GENERAL.ERRORS.missingPermissions'), '', 'lock-closed');\n          } else {\n            this.errorService.errorOccurred.emit(error);\n          }\n          this.isProcessed = false;\n        },\n        next: response => {\n          const resp: any = response;\n          this.alertService.alert(\"success\", this.translate.instant('ACTIONS.MANAGE_FRIENDS.title'), resp.message, \"checkmark\")\n        },\n        complete: () => {\n          this.addFriendForm.reset()\n          this.isProcessed = false;\n          this.getFriends();\n        },\n      });\n    }\n  }\n\n  acceptFriend(friendshipId) {\n    this.friendshipService.acceptFriendship(friendshipId).subscribe({\n      error: error => {\n        if (error.error.message == 'missingPermissions') {\n          this.alertService.alert(\"danger\", this.translate.instant('GENERAL.ERRORS.missingPermissions'), '', 'lock-closed');\n        } else {\n          this.errorService.errorOccurred.emit(error);\n        }\n      },\n      next: response => {\n        const resp: any = response;\n        this.alertService.alert(\"success\", this.translate.instant('ACTIONS.MANAGE_FRIENDS.title'), resp.message, \"checkmark\")\n      },\n      complete: () => {\n        console.log('Friend accepted');\n        this.getFriends();\n      },\n    });\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}
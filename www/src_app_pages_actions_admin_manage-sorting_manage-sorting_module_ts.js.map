{"version":3,"file":"src_app_pages_actions_admin_manage-sorting_manage-sorting_module_ts.js","mappings":"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","sources":["./src/app/pages/actions/admin/manage-sorting/manage-sorting.page.html","./src/app/pages/actions/admin/manage-sorting/manage-sorting-routing.module.ts","./src/app/pages/actions/admin/manage-sorting/manage-sorting.module.ts","./src/app/pages/actions/admin/manage-sorting/manage-sorting.page.ts"],"sourcesContent":["export default \"<ion-content>\\n  <app-toolbar></app-toolbar>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col>\\n        <app-card-title-bar title=\\\"{{ 'ACTIONS.MANAGE_SORTING.title' | translate }}\\\"></app-card-title-bar>\\n        <ion-card color=\\\"light\\\">\\n          <ion-card-content>\\n            <ion-grid class=\\\"inside-card-grid\\\">\\n              <ion-row>\\n                <ion-col>\\n                  <ion-reorder-group (ionItemReorder)=\\\"reorderProjects($event)\\\" *ngIf=\\\"projects.length > 0\\\" disabled=\\\"false\\\">\\n                      <ion-card *ngFor=\\\"let project of projects\\\" color=\\\"light\\\">\\n                        <ion-card-header>\\n                          <ion-card-title>\\n                            {{ project.id }} - {{ project.title }} <ion-reorder style=\\\"position:absolute; top: 0; right: 0;\\\"><ion-icon name=\\\"move\\\"></ion-icon></ion-reorder>\\n                          </ion-card-title>\\n                          <ion-card-subtitle>\\n                            <ion-label class=\\\"subtitle-labels\\\">{{ 'ACTIONS.VIEW_PROJECTS.by' | translate }} </ion-label>\\n                            <ion-label class=\\\"subtitle-labels\\\" color=\\\"primary\\\"><b>{{ project.leader.email }}</b></ion-label><br>\\n                            <ion-label class=\\\"subtitle-labels\\\">{{ 'ACTIONS.VIEW_PROJECT.grade' | translate }} </ion-label><ion-label><b>{{ project.min_grade }}</b></ion-label><b>-</b><ion-label><b>{{ project.max_grade }}</b></ion-label>\\n                          </ion-card-subtitle>\\n                          <ion-card-subtitle>\\n                            <ion-badge color=\\\"danger\\\" *ngIf=\\\"!project.authorized\\\"><ion-label class=\\\"white-font\\\">{{ 'ACTIONS.VIEW_PROJECTS.unauthorized' | translate }}</ion-label></ion-badge>\\n                            <ion-badge color=\\\"success\\\" *ngIf=\\\"project.authorized\\\"><ion-label class=\\\"white-font\\\">{{ 'ACTIONS.VIEW_PROJECTS.authorized' | translate }}</ion-label></ion-badge>\\n\\n                            <ion-badge color=\\\"danger\\\" *ngIf=\\\"project.participants.length > project.max_participants\\\"><ion-label class=\\\"white-font\\\">{{ project.participants.length - project.max_participants }} {{ 'ACTIONS.MANAGE_SORTING.tooMany' | translate }}</ion-label></ion-badge>\\n                            <ion-badge color=\\\"danger\\\" *ngIf=\\\"project.participants.length < project.min_participants\\\"><ion-label class=\\\"white-font\\\">{{ project.min_participants - project.participants.length }} {{ 'ACTIONS.MANAGE_SORTING.tooFew' | translate }}</ion-label></ion-badge>\\n                            <ion-badge color=\\\"success\\\" *ngIf=\\\"project.participants.length <= project.max_participants && project.participants.length >= project.min_participants\\\"><ion-label class=\\\"white-font\\\">{{ 'ACTIONS.MANAGE_SORTING.exact' | translate }}</ion-label></ion-badge>\\n                          </ion-card-subtitle>\\n                        </ion-card-header>\\n                        <ion-card-content>\\n                          <ng-container *ngIf=\\\"project.leader\\\">\\n                            <ion-item color=\\\"light\\\" lines=\\\"none\\\">\\n                              <ion-label>{{ project.leader.email }}</ion-label>\\n                              <ion-icon size=\\\"small\\\" name=\\\"star\\\" slot=\\\"end\\\" color=\\\"warning\\\"></ion-icon>\\n                            </ion-item>\\n                          </ng-container>\\n                          <ng-container *ngIf=\\\"project.assistants.length > 0\\\">\\n                            <ion-item *ngFor=\\\"let assistant of project.assistants\\\" color=\\\"light\\\" lines=\\\"none\\\">\\n                              <ion-label>{{ assistant.email }}</ion-label>\\n                              <ion-icon size=\\\"small\\\" name=\\\"star\\\" slot=\\\"end\\\" color=\\\"warning\\\"></ion-icon>\\n                            </ion-item>\\n                          </ng-container>\\n                          <ng-container *ngIf=\\\"project.participants.length > 0\\\">\\n                            <ion-item *ngFor=\\\"let participant of project.participants\\\" color=\\\"light\\\" lines=\\\"none\\\">\\n                              <ion-label>{{ participant.email }}</ion-label>\\n                              <ion-badge [color]=\\\"participant.grade_level.grade_level >= project.min_grade && participant.grade_level.grade_level <= project.max_grade ? 'success' : 'danger'\\\"><ion-label class=\\\"white-font\\\">{{ participant.grade_level.grade_level }}{{ 'ACTIONS.MANAGE_SORTING.nthGrade' | translate }}</ion-label></ion-badge>\\n                              <ng-container *ngFor=\\\"let preference of participant.preferences\\\">\\n                                <ion-badge [color]=\\\"preference.project_id == project.id ? 'success' : 'danger'\\\"><ion-label class=\\\"white-font\\\">{{ preference.project_id }}</ion-label></ion-badge>\\n                              </ng-container>\\n                              <ion-select (ionChange)=\\\"moveUser(participant, $event.detail.value)\\\" interface=\\\"popover\\\">\\n                                <ion-select-option [value]=\\\"project.id\\\" *ngFor=\\\"let project of projects\\\">{{ project.id }} - {{ project.title }}</ion-select-option>\\n                                <ion-select-option value=\\\"0\\\">{{ 'ACTIONS.MANAGE_SORTING.removeFromProject' | translate }}</ion-select-option>\\n                              </ion-select>\\n                            </ion-item>\\n                          </ng-container>\\n                        </ion-card-content>\\n                      </ion-card>\\n                  </ion-reorder-group>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col *ngIf=\\\"unsortedUsers.length > 0\\\">\\n        <ion-card style=\\\"min-width: 600px\\\">\\n          <ion-card-content>\\n            <ion-grid class=\\\"inside-card-grid\\\">\\n              <ion-row>\\n                <ion-col>\\n                  <ng-container>\\n                    <ion-item *ngFor=\\\"let user of unsortedUsers\\\" color=\\\"light\\\" lines=\\\"none\\\">\\n                      <ion-label>{{ user.email }}</ion-label>\\n                      <ion-badge color=\\\"primary\\\"><ion-label class=\\\"white-font\\\">{{ user.grade_level.grade_level }}{{ 'ACTIONS.MANAGE_SORTING.nthGrade' | translate }}</ion-label></ion-badge>\\n                      <ng-container *ngFor=\\\"let preference of user.preferences\\\">\\n                        <ion-badge color=\\\"primary\\\"><ion-label class=\\\"white-font\\\">{{ preference.project_id }}</ion-label></ion-badge>\\n                      </ng-container>\\n                      <ion-select (ionChange)=\\\"moveUser(user, $event.detail.value)\\\" interface=\\\"popover\\\">\\n                        <ion-select-option [value]=\\\"project.id\\\" *ngFor=\\\"let project of projects\\\">{{ project.id }} - {{ project.title }}</ion-select-option>\\n                      </ion-select>\\n                    </ion-item>\\n                  </ng-container>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n      <ion-col>\\n        <ion-card color=\\\"light\\\">\\n          <ion-card-content>\\n            <ion-grid class=\\\"inside-card-grid\\\">\\n              <ion-row>\\n                <ion-col>\\n                  <div class=\\\"ion-padding\\\">\\n                    <ion-button *ngIf=\\\"isProcessed\\\" type=\\\"submit\\\" [disabled]=\\\"isProcessed\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\" color=\\\"primary\\\"><ion-spinner name=\\\"crescent\\\"></ion-spinner></ion-button>\\n                    <ion-button *ngIf=\\\"!isProcessed\\\" color=\\\"primary\\\" (click)=\\\"sortUsers()\\\" expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\">{{ 'ACTIONS.MANAGE_SORTING.applySorting' | translate }}</ion-button>\\n                  </div>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ManageSortingPage } from './manage-sorting.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ManageSortingPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ManageSortingPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ManageSortingPageRoutingModule } from './manage-sorting-routing.module';\n\nimport { ManageSortingPage } from './manage-sorting.page';\nimport {ComponentsModule} from \"../../../../components/components.module\";\nimport {TranslateLoader, TranslateModule} from \"@ngx-translate/core\";\nimport {createTranslateLoader} from \"../../../../app.module\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ManageSortingPageRoutingModule,\n    ComponentsModule,\n    TranslateModule.forChild({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient]\n      }\n    })\n  ],\n  declarations: [ManageSortingPage]\n})\nexport class ManageSortingPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {User} from \"../../../../interfaces/user\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {UserService} from \"../../../../services/user.service\";\nimport {ErrorService} from \"../../../../services/error.service\";\nimport {ProjectService} from \"../../../../services/project.service\";\nimport {Project} from \"../../../../interfaces/project\";\nimport {AlertService} from \"../../../../services/alert.service\";\n\n@Component({\n  selector: 'app-manage-sorting',\n  templateUrl: './manage-sorting.page.html',\n  styleUrls: ['./manage-sorting.page.scss'],\n})\nexport class ManageSortingPage implements OnInit {\n  unsortedUsers: User[] = [];\n  projects: Project[] = [];\n  isProcessed: boolean = false;\n\n  constructor(private translate: TranslateService,\n              private userService: UserService,\n              private errorService: ErrorService,\n              private projectService: ProjectService,\n              private alertService: AlertService) { }\n\n  ngOnInit() {\n    this.getUsers();\n    this.getProjects();\n  }\n\n  getUsers() {\n    this.userService.getUnsortedUsers().subscribe({\n      error: error => {\n        this.errorService.errorOccurred.emit(error);\n      },\n      next: response => {\n        const resp: any = response;\n        resp.users.forEach(user => {\n          user.role_names = user.roles.map(role => role.name);\n        });\n        this.unsortedUsers = resp.users;\n      },\n    });\n  }\n\n  getProjects() {\n    this.projectService.getProjectsDetailed().subscribe({\n      error: error => {\n        this.errorService.errorOccurred.emit(error);\n      },\n      next: response => {\n        const resp: any = response;\n        this.projects = resp.projects;\n      },\n    });\n  }\n\n  moveUser(user: User, projectId) {\n    for(let i=0; i<this.projects.length; i++){\n      let index = this.projects[i].participants.findIndex(loopUser => loopUser == user)\n      index != -1 && this.projects[i].participants.splice(index, 1)\n    }\n    let indexInUnused = this.unsortedUsers.findIndex(loopUser => loopUser == user)\n    indexInUnused != -1 && this.unsortedUsers.splice(indexInUnused, 1);\n    if (projectId == 0) {\n      this.unsortedUsers.push(user)\n    } else {\n      let project = this.projects.find(loopProject => loopProject.id == projectId)\n      project.participants.push(user);\n    }\n  }\n\n  reorderProjects(ev) {\n    const itemMove = this.projects.splice(ev.detail.from, 1)[0];\n    this.projects.splice(ev.detail.to, 0, itemMove);\n    ev.detail.complete();\n  }\n\n  sortUsers() {\n    if (this.isProcessed == false) {\n      this.isProcessed = true;\n      for(let j=0; j<this.unsortedUsers.length; j++) {\n        this.userService.makeParticipant(this.unsortedUsers[j].id, 0).subscribe({\n          error: error => {\n            if (error.error.message == 'missingPermissions') {\n              this.alertService.alert(\"danger\", this.translate.instant('GENERAL.ERRORS.missingPermissions'), '', 'lock-closed');\n            } else if (error.error.message == 'userCanNotBeConverted') {\n              this.alertService.alert(\"danger\", this.translate.instant('ACTIONS.MANAGE_USERS.title'), 'This user can not be enlisted as a participant.', 'lock-closed');\n            } else {\n              this.errorService.errorOccurred.emit(error);\n            }\n          },\n          next: response => {\n            const resp: any = response;\n            this.alertService.alert(\"success\", this.translate.instant('ACTIONS.MANAGE_USERS.title'), resp.message, \"checkmark\")\n          },\n        });\n      }\n      for(let i=0; i<this.projects.length; i++){\n        for(let j=0; j<this.projects[i].participants.length; j++) {\n          this.userService.makeParticipant(this.projects[i].participants[j].id, this.projects[i].id).subscribe({\n            error: error => {\n              if (error.error.message == 'missingPermissions') {\n                this.alertService.alert(\"danger\", this.translate.instant('GENERAL.ERRORS.missingPermissions'), '', 'lock-closed');\n              } else if (error.error.message == 'userCanNotBeConverted') {\n                this.alertService.alert(\"danger\", this.translate.instant('ACTIONS.MANAGE_USERS.title'), 'This user can not be enlisted as a participant.', 'lock-closed');\n              } else {\n                this.errorService.errorOccurred.emit(error);\n              }\n            },\n            next: response => {\n              const resp: any = response;\n              this.alertService.alert(\"success\", this.translate.instant('ACTIONS.MANAGE_USERS.title'), resp.message, \"checkmark\")\n            },\n          });\n        }\n      }\n      this.isProcessed = false;\n    }\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}
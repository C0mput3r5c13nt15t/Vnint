{"version":3,"file":"src_app_pages_dashboard_dashboard_module_ts.js","mappings":"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","sources":["./src/app/pages/dashboard/dashboard.page.html","./src/app/pages/dashboard/dashboard-routing.module.ts","./src/app/pages/dashboard/dashboard.module.ts","./src/app/pages/dashboard/dashboard.page.ts","./src/app/services/quote.service.ts"],"sourcesContent":["export default \"<ion-content>\\n  <app-toolbar></app-toolbar>\\n  <div class=\\\"dashboard-row\\\">\\n    <ng-container *ngIf=\\\"('DASHBOARD.GREETINGS' | translate) != 'DASHBOARD.GREETINGS'\\\">\\n      <ng-container *ngFor=\\\"let greeting of ('DASHBOARD.GREETINGS' | translate)\\\">\\n        <ng-container>\\n          <ion-card class=\\\"greeting-card\\\" color=\\\"light\\\" *ngIf=\\\"curHr >= greeting.hours[0] && curHr < greeting.hours[1]\\\">\\n            <ion-card-content>\\n              <ion-card-header>\\n                <ion-card-title>\\n                  {{ greeting.title }}\\n                </ion-card-title>\\n              </ion-card-header>\\n              <ion-card-content *ngIf=\\\"quoteOfTheDay\\\">\\n                <ion-label>\\n                  {{ quoteOfTheDay.quote }} <b>- {{ quoteOfTheDay.author }}</b>\\n                </ion-label><br>\\n                <ion-label class=\\\"copyright\\\">{{ quoteOfTheDay.copyright }}</ion-label>\\n              </ion-card-content>\\n              <ion-card-content *ngIf=\\\"!quoteOfTheDay\\\">\\n                <ion-label>\\n                  Loading inspirational quote ...\\n                </ion-label><br>\\n                <ion-label class=\\\"copyright\\\">Copyright Â© 2024 https://theysaidso.com</ion-label>\\n              </ion-card-content>\\n            </ion-card-content>\\n          </ion-card>\\n        </ng-container>\\n      </ng-container>\\n    </ng-container>\\n  </div>\\n  <div class=\\\"dashboard-row\\\">\\n    <ng-container  *ngIf=\\\"error || ('DASHBOARD.CARDS' | translate) == 'DASHBOARD.CARDS'\\\">\\n      <ion-card>\\n        <ion-card-header>\\n          <ion-card-title>\\n            Error\\n          </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <ion-label>\\n            We are sorry but there seems to be some kind of error. Click <a routerLink=\\\"/give-feedback\\\">here</a> to report it.\\n          </ion-label>\\n        </ion-card-content>\\n      </ion-card>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"('DASHBOARD.CARDS' | translate) != 'DASHBOARD.CARDS'\\\">\\n      <ng-container *ngFor=\\\"let card of ('DASHBOARD.CARDS' | translate)\\\">\\n        <ng-container *ngIf=\\\"card.requiredPermissions.length == 0 || hasOneSetOfPermissions(permissions, card.requiredPermissions)\\\">\\n          <app-nav-card cardTitle=\\\"{{ card.title }}\\\" cardIcon=\\\"{{ card.icon_name }}\\\" cardButtons=\\\"{{ card.BUTTONS | json}}\\\" [permissions]=\\\"permissions\\\" [eventPermissions]=\\\"eventPermissions\\\"></app-nav-card>\\n        </ng-container>\\n      </ng-container>\\n    </ng-container>\\n  </div>\\n</ion-content>\\n\\n<!-- *ngIf=\\\"!card.requiredPermissions || hasOneSetOfPermissions(permissions, card.requiredPermissions)\\\" -->\\n<!--  *ngIf=\\\"arrayContainsArray(permissions, card.requiredPermissions) && arrayContainsArray(eventPermissions, card.requiredPermissions)\\\" -->\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardPage } from './dashboard.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport {  HttpClient } from '@angular/common/http';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\n\nimport { DashboardPageRoutingModule } from './dashboard-routing.module';\nimport { ComponentsModule } from '../../components/components.module';\n\nimport { DashboardPage } from './dashboard.page';\n\nimport {createTranslateLoader} from \"src/app/app.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DashboardPageRoutingModule,\n    ComponentsModule,\n    TranslateModule.forChild({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient]\n      }\n    })\n  ],\n  declarations: [DashboardPage]\n})\nexport class DashboardPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Permission } from 'src/app/interfaces/permission';\nimport { AuthService } from 'src/app/services/auth.service';\nimport {AlertService} from 'src/app/services/alert.service';\nimport {QuoteService} from 'src/app/services/quote.service';\nimport {Quote} from 'src/app/interfaces/quote';\nimport {ErrorService} from \"../../services/error.service\";\nimport {UserService} from \"../../services/user.service\";\nimport {AlertController} from \"@ionic/angular\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.page.html',\n  styleUrls: ['./dashboard.page.scss'],\n})\nexport class DashboardPage implements OnInit {\n  error = false;\n  permissions: Permission[] = [];\n  eventPermissions: Permission[] = [];\n  today = new Date();\n  curHr = this.today.getHours();\n  quoteOfTheDay: Quote;\n\n  constructor(private auth: AuthService,\n              private router: Router,\n              private translate: TranslateService,\n              public alertService: AlertService,\n              private alertController: AlertController,\n              private quoteService: QuoteService,\n              private errorService: ErrorService,\n              private userService: UserService) { }\n\n  ngOnInit() {\n    this.quoteService.getQuote().subscribe({\n      next: response => {\n        const resp: any = response;\n        this.quoteOfTheDay = {\n          quote: resp.contents.quotes[0].quote,\n          author: resp.contents.quotes[0].author,\n          copyright: 'Copyright Â© ' + resp.copyright.year.toString() + ' ' + resp.copyright.url,\n        }\n      }\n    })\n    this.getGradeLevel();\n  }\n\n  ionViewWillEnter() {\n    this.auth.authenticated().subscribe({\n      error: () => {\n        this.auth.setLoggedIn = false;\n        this.auth.setSessionExpired = true;\n        this.router.navigate(['/login']);\n      },\n      next: response => {\n        const resp: any = response;\n        if (resp.authenticated == false) {\n          this.auth.setLoggedIn = false;\n          this.auth.setSessionExpired = true;\n          this.router.navigate(['/login']);\n        } else {\n          this.getPermissions();\n          this.getEventPermissions();\n        }\n      },\n    });\n  }\n\n  getPermissions() {\n    this.auth.permissions().subscribe({\n      error: error => {\n        this.errorService.errorOccurred.emit(error);\n      },\n      next: response => {\n        const resp: any = response;\n        this.permissions = resp.permissions;\n      },\n    });\n  }\n\n  getEventPermissions() {\n    this.auth.eventPermissions().subscribe({\n      error: error => {\n        this.errorService.errorOccurred.emit(error);\n      },\n      next: response => {\n        const resp: any = response;\n        this.eventPermissions = resp.permissions;\n      },\n    });\n  }\n\n  getGradeLevel() {\n    this.userService.getGradeLevel().subscribe({\n      error: error => {\n        this.errorService.errorOccurred.emit(error);\n      },\n      next: response => {\n        const resp: any = response;\n\n        if (!resp.grade_level) {\n          this.setGradeAlert();\n        }\n      },\n    });\n  }\n\n  async setGradeAlert() {\n    const alert = await this.alertController.create({\n      header: this.translate.instant('DASHBOARD.SET_GRADE_POPUP.alertHeader'),\n      message: this.translate.instant('DASHBOARD.SET_GRADE_POPUP.alertMessage'),\n      inputs: [\n        {\n          name: 'grade_level',\n          type: 'number',\n          min: 0,\n          max: 14\n        }\n      ],\n      buttons: [\n        {\n          text: this.translate.instant('DASHBOARD.SET_GRADE_POPUP.external'),\n          handler: () => {\n            this.userService.convertSelfToGuestAttendant().subscribe({\n              error: error => {\n                this.errorService.errorOccurred.emit(error);\n              },\n              next: response => {\n                const resp: any = response;\n                this.alertService.alert(\"success\", resp.message, \"\", \"checkmark\")\n              }\n            });\n          }\n        }, {\n          text: this.translate.instant('GENERAL.POPUPS.ok'),\n          handler: data => {\n            this.userService.setGradeLevel(data.grade_level).subscribe({\n              error: error => {\n                this.errorService.errorOccurred.emit(error);\n              },\n              next: response => {\n                const resp: any = response;\n                this.alertService.alert(\"success\", resp.message, \"\", \"checkmark\")\n              }\n            });\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  hasOneSetOfPermissions(permissions, setsOfRequiredPermissions: Permission[][]) {\n    for (const setOfRequiredPermissions of setsOfRequiredPermissions) {\n      if (this.arrayContainsArray(permissions, setOfRequiredPermissions)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns true if the first specified array contains all elements\n   * from the second one. false otherwise.\n   *\n   * @param {array} superset\n   * @param {array} subset\n   *\n   * @returns {boolean}\n   */\n  arrayContainsArray (superset, subset) {\n    return subset.every(function (value) {\n      return (superset.includes(value));\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {TranslateService} from \"@ngx-translate/core\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuoteService {\n  private headers = new HttpHeaders({\n    accept: 'application/json',\n    contentType: 'application/json',\n  });\n  private options = { this:this.headers, withCredentials: false };\n\n  constructor(private http: HttpClient,\n              private translate: TranslateService) { }\n\n  public getQuote(): Observable<object> {\n    return this.http.get('https://quotes.rest/qod?language=en', this.options);\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}
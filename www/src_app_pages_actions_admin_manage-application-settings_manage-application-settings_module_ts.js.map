{"version":3,"file":"src_app_pages_actions_admin_manage-application-settings_manage-application-settings_module_ts.js","mappings":"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","sources":["./src/app/pages/actions/admin/manage-application-settings/manage-application-settings.page.html","./src/app/pages/actions/admin/manage-application-settings/manage-application-settings-routing.module.ts","./src/app/pages/actions/admin/manage-application-settings/manage-application-settings.module.ts","./src/app/pages/actions/admin/manage-application-settings/manage-application-settings.page.ts","./src/app/services/application-settings.service.ts"],"sourcesContent":["export default \"<ion-content>\\n  <app-toolbar></app-toolbar>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col>\\n        <app-card-title-bar title=\\\"{{ 'ACTIONS.MANAGE_APPLICATION_SETTINGS.title' | translate }}\\\"></app-card-title-bar>\\n        <ion-card color=\\\"light\\\">\\n          <ion-card-content>\\n            <ion-grid class=\\\"inside-card-grid\\\">\\n              <ion-row>\\n                <ion-col>\\n                  <form [formGroup]=\\\"updateApplicationSettingsForm\\\" (ngSubmit)=\\\"updateApplicationSettings()\\\">\\n                    <ion-item color=\\\"light\\\">\\n                      <ion-label position=\\\"floating\\\">{{ 'ACTIONS.MANAGE_APPLICATION_SETTINGS.INPUT.non_guest_email_domain' | translate }}</ion-label>\\n                      <ion-input formControlName=\\\"non_guest_email_domain\\\" type=\\\"text\\\"></ion-input>\\n                    </ion-item>\\n                    <app-form-error [errors]=\\\"errorControl.non_guest_email_domain.errors\\\"></app-form-error>\\n\\n                    <br>\\n\\n                    <ion-item color=\\\"light\\\">\\n                      <ion-label position=\\\"floating\\\">{{ 'ACTIONS.MANAGE_APPLICATION_SETTINGS.INPUT.max_friends' | translate }}</ion-label>\\n                      <ion-input formControlName=\\\"max_friends\\\" type=\\\"number\\\"></ion-input>\\n                    </ion-item>\\n                    <app-form-error [errors]=\\\"errorControl.max_friends.errors\\\"></app-form-error>\\n\\n                    <br>\\n\\n                    <ion-item color=\\\"light\\\">\\n                      <ion-label position=\\\"floating\\\">{{ 'ACTIONS.MANAGE_APPLICATION_SETTINGS.INPUT.min_preferences' | translate }}</ion-label>\\n                      <ion-input formControlName=\\\"min_preferences\\\" type=\\\"number\\\"></ion-input>\\n                    </ion-item>\\n                    <app-form-error [errors]=\\\"errorControl.min_preferences.errors\\\"></app-form-error>\\n\\n                    <br>\\n\\n                    <ion-item color=\\\"light\\\">\\n                      <ion-label position=\\\"floating\\\">{{ 'ACTIONS.MANAGE_APPLICATION_SETTINGS.INPUT.max_preferences' | translate }}</ion-label>\\n                      <ion-input formControlName=\\\"max_preferences\\\" type=\\\"number\\\"></ion-input>\\n                    </ion-item>\\n                    <app-form-error [errors]=\\\"errorControl.max_preferences.errors\\\"></app-form-error>\\n\\n                    <div class=\\\"ion-padding\\\">\\n                      <ion-button *ngIf=\\\"!isProcessed\\\" type=\\\"submit\\\" [disabled]=\\\"updateApplicationSettingsForm.invalid || isProcessed || !permissions.includes('applicationsettings.update') || !eventPermissions.includes('applicationsettings.update')\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\" color=\\\"primary\\\">{{ 'ACTIONS.MANAGE_APPLICATION_SETTINGS.INPUT.submitButton' | translate }}</ion-button>\\n                      <ion-button *ngIf=\\\"isProcessed\\\" type=\\\"submit\\\" [disabled]=\\\"updateApplicationSettingsForm.invalid || isProcessed\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\" color=\\\"primary\\\"><ion-spinner name=\\\"crescent\\\"></ion-spinner></ion-button>\\n                    </div>\\n                  </form>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ManageApplicationSettingsPage } from './manage-application-settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ManageApplicationSettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ManageApplicationSettingsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ManageApplicationSettingsPageRoutingModule } from './manage-application-settings-routing.module';\n\nimport { ManageApplicationSettingsPage } from './manage-application-settings.page';\nimport {ComponentsModule} from \"../../../../components/components.module\";\nimport {TranslateLoader, TranslateModule} from \"@ngx-translate/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {createTranslateLoader} from \"src/app/app.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ManageApplicationSettingsPageRoutingModule,\n    ComponentsModule,\n    TranslateModule.forChild({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient]\n      }\n    }),\n    ReactiveFormsModule\n  ],\n  declarations: [ManageApplicationSettingsPage]\n})\nexport class ManageApplicationSettingsPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {ApplicationSettingsService} from \"../../../../services/application-settings.service\";\nimport {ErrorService} from \"../../../../services/error.service\";\nimport {AlertService} from \"../../../../services/alert.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {AuthService} from \"../../../../services/auth.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-manage-application-settings',\n  templateUrl: './manage-application-settings.page.html',\n  styleUrls: ['./manage-application-settings.page.scss'],\n})\nexport class ManageApplicationSettingsPage implements OnInit {\n  updateApplicationSettingsForm: FormGroup;\n  isProcessed = false;\n  permissions: string[] = [];\n  eventPermissions: string[] = [];\n\n  constructor(private formBuilder: FormBuilder,\n              private errorService: ErrorService,\n              private translate: TranslateService,\n              private alertService: AlertService,\n              private auth: AuthService,\n              private router: Router,\n              private applicationSettingsService: ApplicationSettingsService) { }\n\n  ngOnInit() {\n    this.auth.authenticated().subscribe({\n      error: () => {\n        this.auth.setLoggedIn = false;\n        this.auth.setSessionExpired = true;\n        this.router.navigate(['/login']);\n      },\n      next: response => {\n        const resp: any = response;\n        if (resp.authenticated == false) {\n          this.auth.setLoggedIn = false;\n          this.auth.setSessionExpired = true;\n          this.router.navigate(['/login']);\n        } else {\n          this.getPermissions();\n          this.getEventPermissions();\n        }\n      },\n    });\n    this.updateApplicationSettingsForm = this.formBuilder.group({\n      non_guest_email_domain: ['@s.school.com', Validators.required],\n      max_friends: [2, Validators.required],\n      min_preferences: [3, Validators.required],\n      max_preferences: [5, Validators.required],\n    });\n    this.getApplicationSettings()\n  }\n\n  getApplicationSettings() {\n    this.applicationSettingsService.getApplicationSettings().subscribe({\n      error: error => {\n        this.errorService.errorOccurred.emit(error);\n      },\n      next: response => {\n        const resp: any = response;\n        this.updateApplicationSettingsForm.patchValue(resp.settings)\n      },\n    });\n  }\n\n  get errorControl() {\n    return this.updateApplicationSettingsForm.controls;\n  }\n\n  updateApplicationSettings() {\n    if (!this.isProcessed && this.updateApplicationSettingsForm.valid) {\n      this.isProcessed = true;\n      this.applicationSettingsService.updateEvent(this.updateApplicationSettingsForm.value).subscribe({\n        error: error => {\n          if (error.error.message == 'The given data was invalid.') {\n            for (const errorType in error.error.errors) {\n              const errors: any = [];\n              for (const errorMessage in error.error.errors[errorType]) {\n                errors.push({[error.error.errors[errorType][errorMessage]]: true});\n              }\n              this.updateApplicationSettingsForm.controls[errorType].setErrors(errors);\n            }\n          } else if (error.error.message == 'missingPermissions') {\n            this.alertService.alert(\"danger\", this.translate.instant('GENERAL.ERRORS.missingPermissions'), '', 'lock-closed');\n          } else {\n            this.errorService.errorOccurred.emit(error);\n          }\n          this.isProcessed = false;\n        },\n        next: response => {\n          const resp: any = response;\n          this.alertService.alert(\"success\", this.translate.instant('ACTIONS.MANAGE_SCHEDULE.title'), resp.message, \"checkmark\")\n        },\n        complete: () => {\n          this.updateApplicationSettingsForm.reset();\n          this.isProcessed = false;\n          this.getApplicationSettings();\n        },\n      });\n    }\n  }\n\n  getPermissions() {\n    this.auth.permissions().subscribe({\n      error: error => {\n        this.errorService.errorOccurred.emit(error);\n      },\n      next: response => {\n        const resp: any = response;\n        this.permissions = resp.permissions;\n      },\n    });\n  }\n\n  getEventPermissions() {\n    this.auth.eventPermissions().subscribe({\n      error: error => {\n        this.errorService.errorOccurred.emit(error);\n      },\n      next: response => {\n        const resp: any = response;\n        this.eventPermissions = resp.permissions;\n      },\n    });\n  }\n\n  /**\n   * Returns true if the first specified array contains all elements\n   * from the second one. false otherwise.\n   *\n   * @param {array} superset\n   * @param {array} subset\n   *\n   * @returns {boolean}\n   */\n  arrayContainsArray (superset, subset) {\n    return subset.every(function (value) {\n      return (superset.includes(value));\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApplicationSettingsService {\n  private headers = new HttpHeaders({\n    accept: 'application/json',\n    contentType: 'application/json',\n  });\n  private options = { this:this.headers, withCredentials: true };\n\n  constructor(private http: HttpClient) { }\n\n  public getApplicationSettings(): Observable<object> {\n    return this.http.get('/api/application-settings', this.options);\n  }\n\n  public updateEvent(applicationSettingCredentials): Observable<object> {\n    return this.http.put('/api/application-settings', applicationSettingCredentials, this.options);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}
{"version":3,"file":"src_app_pages_actions_admin_manage-friendships_manage-friendships_module_ts.js","mappings":"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","sources":["./src/app/pages/actions/admin/manage-friendships/manage-friendships.page.html","./src/app/pages/actions/admin/manage-friendships/manage-friendships-routing.module.ts","./src/app/pages/actions/admin/manage-friendships/manage-friendships.module.ts","./src/app/pages/actions/admin/manage-friendships/manage-friendships.page.ts"],"sourcesContent":["export default \"<ion-content>\\n  <app-toolbar></app-toolbar>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col>\\n        <app-card-title-bar title=\\\"{{ 'ACTIONS.MANAGE_FRIENDSHIPS.title' | translate }}\\\"></app-card-title-bar>\\n        <ion-card color=\\\"light\\\">\\n          <ion-card-content>\\n            <ion-grid class=\\\"inside-card-grid\\\">\\n              <ion-row>\\n                <ion-col>\\n                  <ng-container *ngIf=\\\"friendships.length > 0\\\">\\n                    <ion-card *ngFor=\\\"let friendship of friendships\\\">\\n                      <ion-item color=\\\"light\\\">\\n                        <ion-icon *ngIf=\\\"friendship.state == 0\\\" color=\\\"danger\\\" slot=\\\"start\\\" name=\\\"hourglass\\\"></ion-icon>\\n                        <ion-icon *ngIf=\\\"friendship.state == 1\\\" color=\\\"warning\\\" name=\\\"checkmark\\\"></ion-icon>\\n                        <ion-icon *ngIf=\\\"friendship.state == 2\\\" color=\\\"success\\\" name=\\\"checkmark-done\\\"></ion-icon>\\n                        <ion-card-header>\\n                          <ion-card-subtitle>\\n                            {{ 'ACTIONS.MANAGE_FRIENDSHIPS.FRIENDS.proposedOn' | translate }} <ion-label color=\\\"primary\\\" class=\\\"subtitle-labels\\\">{{ friendship.created_at | date:( 'GENERAL.timeDisplayFormat' | translate ):( 'GENERAL.timezone' | translate ):( 'GENERAL.locale' | translate ) }}</ion-label> {{ 'ACTIONS.MANAGE_FRIENDSHIPS.FRIENDS.from' | translate }} <ion-label color=\\\"primary\\\" class=\\\"subtitle-labels\\\">{{ friendship.applicant.email }}</ion-label> {{ 'ACTIONS.MANAGE_FRIENDSHIPS.FRIENDS.to' | translate }} <ion-label color=\\\"primary\\\" class=\\\"subtitle-labels\\\">{{ friendship.respondent.email }}</ion-label>\\n                          </ion-card-subtitle>\\n                          <ion-card-subtitle>\\n                            <ion-chip [disabled]=\\\"friendship.state != 1\\\" color=\\\"success\\\" (click)=\\\"authorizeFriendship(friendship.id)\\\">\\n                              <ion-icon name=\\\"checkmark\\\"></ion-icon>\\n                              <ion-label>{{ 'ACTIONS.MANAGE_FRIENDSHIPS.FRIENDS.authorizeFriendship' | translate }}</ion-label>\\n                            </ion-chip>\\n                            <ion-chip [disabled]=\\\"friendship.state != 2\\\" color=\\\"danger\\\" (click)=\\\"declineFriendship(friendship.id)\\\">\\n                              <ion-icon name=\\\"close\\\"></ion-icon>\\n                              <ion-label>{{ 'ACTIONS.MANAGE_FRIENDSHIPS.FRIENDS.declineFriendship' | translate }}</ion-label>\\n                            </ion-chip>\\n                          </ion-card-subtitle>\\n                        </ion-card-header>\\n                      </ion-item>\\n                    </ion-card><br>\\n                  </ng-container>\\n                  <ng-container *ngIf=\\\"friendships.length == 0\\\">\\n                    <app-empty-card message=\\\"{{ 'ACTIONS.MANAGE_FRIENDSHIPS.noFriends' | translate }}\\\"></app-empty-card><br>\\n                  </ng-container>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col *ngIf=\\\"friendships.length > 0\\\">\\n        <ion-card color=\\\"light\\\">\\n          <ion-card-content>\\n            <ion-grid class=\\\"inside-card-grid\\\">\\n              <ion-row>\\n                <ion-col>\\n                  <ion-label>\\n                    {{ 'ACTIONS.MANAGE_FRIENDSHIPS.LEGEND.theFriendshipRequest' | translate }}<br>\\n                    <ion-icon color=\\\"danger\\\" slot=\\\"start\\\" name=\\\"hourglass\\\"></ion-icon> {{ 'ACTIONS.MANAGE_FRIENDSHIPS.LEGEND.hourglass' | translate }}<br>\\n                    <ion-icon color=\\\"warning\\\" slot=\\\"start\\\" name=\\\"checkmark\\\"></ion-icon> {{ 'ACTIONS.MANAGE_FRIENDSHIPS.LEGEND.check' | translate }}<br>\\n                    <ion-icon color=\\\"success\\\" slot=\\\"start\\\" name=\\\"checkmark-done\\\"></ion-icon> {{ 'ACTIONS.MANAGE_FRIENDSHIPS.LEGEND.doubleCheck' | translate }}\\n                  </ion-label>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ManageFriendshipsPage } from './manage-friendships.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ManageFriendshipsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ManageFriendshipsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\n\nimport { ManageFriendshipsPageRoutingModule } from './manage-friendships-routing.module';\nimport { ComponentsModule } from '../../../../components/components.module';\n\nimport { ManageFriendshipsPage } from './manage-friendships.page';\n\nimport {createTranslateLoader} from \"src/app/app.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ManageFriendshipsPageRoutingModule,\n    ComponentsModule,\n    TranslateModule.forChild({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient]\n      }\n    })\n  ],\n  declarations: [ManageFriendshipsPage]\n})\nexport class ManageFriendshipsPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Friendship } from 'src/app/interfaces/friendship';\nimport { FriendshipService } from 'src/app/services/friendship.service';\nimport { ErrorService } from 'src/app/services/error.service';\nimport {AlertService} from \"../../../../services/alert.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\n@Component({\n  selector: 'app-manage-friendships',\n  templateUrl: './manage-friendships.page.html',\n  styleUrls: ['./manage-friendships.page.scss'],\n})\nexport class ManageFriendshipsPage implements OnInit {\n  friendships: Friendship[] = [];\n\n  constructor(private friendshipService: FriendshipService,\n              private errorService: ErrorService,\n              private alertService: AlertService,\n              private translate: TranslateService) { }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.getFriendships();\n  }\n\n  getFriendships() {\n    this.friendshipService.getFriendships().subscribe({\n      error: error => {\n        this.errorService.errorOccurred.emit(error);\n      },\n      next: response => {\n        const resp: any = response;\n        this.friendships = resp.friendships;\n      }\n    });\n  }\n\n  authorizeFriendship(friendshipId) {\n    this.friendshipService.authorizeFriendship(friendshipId).subscribe({\n      error: error => {\n        this.errorService.errorOccurred.emit(error);\n      },\n      next: response => {\n        const resp: any = response;\n        this.alertService.alert(\"success\", this.translate.instant('ACTIONS.MANAGE_FRIENDSHIPS.title'), resp.message, \"checkmark\")\n      },\n      complete: () => {\n        this.getFriendships();\n      },\n    });\n  }\n\n  declineFriendship(friendshipId) {\n    this.friendshipService.declineFriendship(friendshipId).subscribe({\n      error: error => {\n        this.errorService.errorOccurred.emit(error);\n      },\n      next: response => {\n        const resp: any = response;\n        this.alertService.alert(\"success\", this.translate.instant('ACTIONS.MANAGE_FRIENDSHIPS.title'), resp.message, \"checkmark\")\n      },\n      complete: () => {\n        this.getFriendships();\n      },\n    });\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}
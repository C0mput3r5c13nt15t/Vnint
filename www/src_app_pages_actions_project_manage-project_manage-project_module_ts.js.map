{"version":3,"file":"src_app_pages_actions_project_manage-project_manage-project_module_ts.js","mappings":"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","sources":["./src/app/pages/actions/project/manage-project/manage-project.page.html","./src/app/pages/actions/project/manage-project/manage-project-routing.module.ts","./src/app/pages/actions/project/manage-project/manage-project.module.ts","./src/app/pages/actions/project/manage-project/manage-project.page.ts"],"sourcesContent":["export default \"<ion-content>\\n  <app-toolbar></app-toolbar>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col>\\n        <app-card-title-bar *ngIf=\\\"project\\\" [title]=\\\"project.title\\\"></app-card-title-bar>\\n        <app-card-title-bar *ngIf=\\\"!project\\\" title=\\\"{{ 'ACTIONS.MANAGE_PROJECT.title' | translate }}\\\"></app-card-title-bar>\\n        <ion-card *ngIf=\\\"project\\\" color=\\\"light\\\">\\n          <img class=\\\"project-thumbnail\\\" *ngIf=\\\"project.image\\\" src=\\\"/images/{{ project.image }}\\\" [alt]=\\\"project.image\\\">\\n          <ion-card-content>\\n            <ion-grid class=\\\"inside-card-grid\\\">\\n              <ion-row>\\n                <ion-col>\\n                  <ion-label>{{ 'ACTIONS.MANAGE_PROJECT.topic' | translate }} </ion-label>\\n                  <ng-container *ngFor=\\\"let topic of ('GENERAL.PROJECT_TOPICS' | translate) | keyvalue\\\">\\n                    <ion-label class=\\\"subtitle-labels\\\" color=\\\"primary\\\" *ngIf=\\\"project.topic == topic.key\\\"><b>{{ topic.value }}</b></ion-label>\\n                  </ng-container>\\n                  <br><br>\\n                  <ion-label>\\n                    {{ project.description }}\\n                  </ion-label>\\n                  <br>\\n                  <ng-container *ngIf=\\\"project.timeframes.length > 0\\\">\\n                    <br>\\n                    <ion-label>{{ 'ACTIONS.MANAGE_PROJECT.timeframes' | translate }}</ion-label>\\n                    <div *ngFor=\\\"let timeframe of project.timeframes\\\">\\n                      <ion-card class=\\\"timeframe-card\\\" color=\\\"light\\\">\\n                        <ion-card-content>\\n                          <ion-label>{{ 'ACTIONS.MANAGE_PROJECT.from' | translate }} <ion-label>{{ timeframe.from | date:( 'GENERAL.exactTimeDisplayFormat' | translate ):( 'GENERAL.timezone' | translate ):( 'GENERAL.locale' | translate ) }}</ion-label></ion-label><br>\\n                          <ion-label>{{ 'ACTIONS.MANAGE_PROJECT.until' | translate }} <ion-label>{{ timeframe.until | date:( 'GENERAL.exactTimeDisplayFormat' | translate ):( 'GENERAL.timezone' | translate ):( 'GENERAL.locale' | translate ) }}</ion-label></ion-label>\\n                        </ion-card-content>\\n                      </ion-card>\\n                    </div>\\n                  </ng-container>\\n                  <br>\\n                  <ion-label>{{ 'ACTIONS.MANAGE_PROJECT.leader' | translate }} </ion-label><ion-label color=\\\"primary\\\"><b>{{ project.leader.email }}</b></ion-label>\\n                  <br>\\n                  <ion-label>{{ 'ACTIONS.MANAGE_PROJECT.cost' | translate }} </ion-label><ion-label><b>{{ project.cost }} €</b></ion-label>\\n                  <br><br>\\n                  <ion-label>{{ 'ACTIONS.MANAGE_PROJECT.grade' | translate }} </ion-label><ion-label><b>{{ project.min_grade }}</b></ion-label><b>-</b><ion-label><b>{{ project.max_grade }}</b></ion-label>\\n                  <br>\\n                  <ion-label>{{ 'ACTIONS.MANAGE_PROJECT.capacity' | translate }} </ion-label><ion-label><b>{{ project.min_participants }}</b></ion-label><b>-</b><ion-label><b>{{ project.max_participants }}</b></ion-label>\\n                  <br><br>\\n                  <ion-label>{{ 'GENERAL.createdAt' | translate }} </ion-label><ion-label>{{ project.created_at | date:( 'GENERAL.timeDisplayFormat' | translate ):( 'GENERAL.timezone' | translate ):( 'GENERAL.locale' | translate ) }}</ion-label><br>\\n                  <ion-label>{{ 'GENERAL.updatedAt' | translate }} </ion-label><ion-label>{{ project.updated_at | date:( 'GENERAL.timeDisplayFormat' | translate ):( 'GENERAL.timezone' | translate ):( 'GENERAL.locale' | translate ) }}</ion-label>\\n                </ion-col>\\n              </ion-row>\\n              <ng-container *ngIf=\\\"permissions.includes('projects.update_associated') || permissions.includes('projects.destroy')\\\">\\n                <br>\\n                <hr>\\n                <ion-row>\\n                  <ion-chip *ngIf=\\\"permissions.includes('projects.update_associated')\\\" [routerLink]=\\\"['/edit-project']\\\" color=\\\"primary\\\">\\n                    <ion-icon name=\\\"pencil\\\"></ion-icon>\\n                    <ion-label>{{ 'ACTIONS.MANAGE_PROJECT.edit' | translate }}</ion-label>\\n                  </ion-chip>\\n                  <ion-chip *ngIf=\\\"permissions.includes('projects.destroy')\\\" (click)=\\\"deleteProject()\\\" color=\\\"danger\\\">\\n                    <ion-icon name=\\\"trash\\\"></ion-icon>\\n                    <ion-label>{{ 'ACTIONS.MANAGE_PROJECT.delete' | translate }}</ion-label>\\n                  </ion-chip>\\n                </ion-row>\\n              </ng-container>\\n            </ion-grid>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col *ngIf=\\\"project\\\">\\n        <ion-card color=\\\"light\\\">\\n          <ion-card-header>\\n            <ion-card-title>\\n              {{ 'ACTIONS.MANAGE_PROJECT.participants' | translate }}\\n            </ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-grid class=\\\"inside-card-grid\\\">\\n              <ion-row>\\n                <ion-col>\\n                  <ion-card color=\\\"light\\\">\\n                    <ion-card-header>\\n                      <ion-card-title class=\\\"user-email\\\">\\n                        {{ project.leader.email }}\\n                      </ion-card-title>\\n                      <ion-card-subtitle>\\n                        <ion-label color=\\\"primary\\\" class=\\\"subtitle-labels\\\">{{ 'ACTIONS.MANAGE_PROJECT.ROLES.leader' | translate }}</ion-label>\\n                      </ion-card-subtitle>\\n                    </ion-card-header>\\n                  </ion-card>\\n                  <ng-container *ngIf=\\\"project.assistants.length > 0\\\">\\n                    <ng-container *ngIf=\\\"permissions.includes('projects.promote_assistant')\\\">\\n                      <ion-card button=\\\"true\\\" (click)=\\\"removeAssistent(assistant.id)\\\" *ngFor=\\\"let assistant of project.assistants\\\" color=\\\"light\\\">\\n                        <ion-card-header>\\n                          <ion-card-title class=\\\"user-email\\\">\\n                            {{ assistant.email }}\\n                          </ion-card-title>\\n                          <ion-card-subtitle>\\n                            <ion-label color=\\\"primary\\\" class=\\\"subtitle-labels\\\">{{ 'ACTIONS.MANAGE_PROJECT.ROLES.assistent' | translate }}</ion-label>\\n                          </ion-card-subtitle>\\n                        </ion-card-header>\\n                      </ion-card>\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"!permissions.includes('projects.promote_assistant')\\\">\\n                      <ion-card *ngFor=\\\"let assistant of project.assistants\\\" color=\\\"light\\\">\\n                        <ion-card-header>\\n                          <ion-card-title class=\\\"user-email\\\">\\n                            {{ assistant.email }}\\n                          </ion-card-title>\\n                          <ion-card-subtitle>\\n                            <ion-label color=\\\"primary\\\" class=\\\"subtitle-labels\\\">{{ 'ACTIONS.MANAGE_PROJECT.ROLES.assistent' | translate }}</ion-label>\\n                          </ion-card-subtitle>\\n                        </ion-card-header>\\n                      </ion-card>\\n                    </ng-container>\\n                  </ng-container>\\n                  <ng-container *ngIf=\\\"project.participants.length > 0\\\">\\n                    <ion-card *ngFor=\\\"let participant of project.participants\\\" color=\\\"light\\\">\\n                      <ion-card-header>\\n                        <ion-card-title class=\\\"user-email\\\">\\n                          {{ participant.email }}\\n                        </ion-card-title>\\n                        <ion-label color=\\\"primary\\\" class=\\\"subtitle-labels\\\">{{ 'ACTIONS.MANAGE_PROJECT.ROLES.participant' | translate }}</ion-label>\\n                      </ion-card-header>\\n                    </ion-card>\\n                  </ng-container>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n      <ion-col *ngIf=\\\"permissions.includes('projects.promote_assistant')\\\">\\n        <ion-card color=\\\"light\\\">\\n          <ion-card-content>\\n            <ion-grid class=\\\"inside-card-grid\\\">\\n              <ion-row>\\n                <ion-col>\\n                  <form [formGroup]=\\\"addAssistentForm\\\" (ngSubmit)=\\\"addAssistent()\\\">\\n\\n                    <ion-item color=\\\"light\\\">\\n                      <ion-input type=\\\"email\\\" formControlName=\\\"attendant_email\\\" placeholder=\\\"{{ 'LOGIN.INPUT.email' | translate }}\\\"></ion-input>\\n                    </ion-item>\\n                    <app-form-error [errors]=\\\"errorControl.attendant_email.errors\\\"></app-form-error>\\n\\n                    <ion-checkbox class=\\\"invisible\\\" formControlName=\\\"fax\\\"></ion-checkbox>\\n\\n                    <div class=\\\"ion-padding\\\">\\n                      <ion-button *ngIf=\\\"isProcessed\\\" type=\\\"submit\\\" [disabled]=\\\"addAssistentForm.invalid || isProcessed\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\" color=\\\"primary\\\"><ion-spinner name=\\\"crescent\\\"></ion-spinner></ion-button>\\n                      <ion-button *ngIf=\\\"!isProcessed\\\" color=\\\"primary\\\" [disabled]=\\\"addAssistentForm.invalid\\\" (click)=\\\"addAssistent()\\\" expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\">+ {{ 'ACTIONS.MANAGE_PROJECT.addAssistant' | translate }}</ion-button>\\n                    </div>\\n\\n                    <ion-label>\\n                      {{ 'ACTIONS.MANAGE_PROJECT.removeAssistants' | translate }}\\n                    </ion-label>\\n                  </form>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ManageProjectPage } from './manage-project.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ManageProjectPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ManageProjectPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\n\nimport { ManageProjectPageRoutingModule } from './manage-project-routing.module';\nimport { ComponentsModule } from '../../../../components/components.module';\n\nimport { ManageProjectPage } from './manage-project.page';\n\nimport {createTranslateLoader} from \"src/app/app.module\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        ManageProjectPageRoutingModule,\n        ComponentsModule,\n        TranslateModule.forChild({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: createTranslateLoader,\n                deps: [HttpClient]\n            }\n        }),\n        ReactiveFormsModule,\n    ],\n  declarations: [ManageProjectPage]\n})\nexport class ManageProjectPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Project } from 'src/app/interfaces/project';\nimport { ProjectService } from 'src/app/services/project.service';\nimport { ErrorService } from 'src/app/services/error.service';\nimport {User} from \"../../../../interfaces/user\";\nimport {Preference} from \"../../../../interfaces/preference\";\nimport {AuthService} from \"../../../../services/auth.service\";\nimport {PreferencesService} from \"../../../../services/preference.service\";\nimport {AlertService} from \"../../../../services/alert.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {AlertController} from \"@ionic/angular\";\n\n@Component({\n  selector: 'app-manage-project',\n  templateUrl: './manage-project.page.html',\n  styleUrls: ['./manage-project.page.scss'],\n})\nexport class ManageProjectPage implements OnInit {\n  project: Project;\n  user: User;\n  permissions: string[] = [];\n  preference_ids: Number[] = [];\n  preferences: Preference[];\n  addAssistentForm: FormGroup;\n  isProcessed = false;\n\n  constructor(private formBuilder: FormBuilder,\n              private projectService: ProjectService,\n              private router: Router,\n              private alertController: AlertController,\n              private errorService: ErrorService,\n              private auth: AuthService,\n              private preferencesService: PreferencesService,\n              private alertService: AlertService,\n              private translate: TranslateService) { }\n\n  ngOnInit() {\n    this.addAssistentForm = this.formBuilder.group({\n      attendant_email: ['', Validators.required],\n      fax: []\n    });\n  }\n\n  get errorControl() {\n    return this.addAssistentForm.controls;\n  }\n\n  ionViewWillEnter() {\n    this.getProject();\n    this.auth.authenticated().subscribe({\n      error: () => {\n        this.auth.setLoggedIn = false;\n        this.auth.setSessionExpired = true;\n        this.router.navigate(['/login']);\n      },\n      next: response => {\n        const resp: any = response;\n        if (resp.authenticated == false) {\n          this.auth.setLoggedIn = false;\n          this.auth.setSessionExpired = true;\n          this.router.navigate(['/login']);\n        } else {\n          this.user = resp.user;\n\n          this.auth.permissions().subscribe({\n            error: error => {\n              if (error.error.message == 'missingPermissions') {\n                this.alertService.alert(\"danger\", this.translate.instant('GENERAL.ERRORS.missingPermissions'), '', 'lock-closed');\n              } else {\n                this.errorService.errorOccurred.emit(error);\n              }\n            },\n            next: response => {\n              const resp: any = response;\n              this.permissions = [];\n              this.permissions = resp.permissions;\n\n              if (this.permissions.includes('preferences.show_associated')) {\n                this.getPreferences();\n              }\n            },\n          });\n        }\n      },\n    });\n  }\n\n  getPreferences() {\n    this.preferencesService.getAssociatedPreferences().subscribe({\n      error: error => {\n        this.errorService.errorOccurred.emit(error);\n      },\n      next: response => {\n        const resp: any = response;\n        this.preferences = resp.preferences;\n        this.preference_ids = [];\n        resp.preferences.forEach(preference => {\n          this.preference_ids.push(preference.project_id);\n        });\n      },\n    });\n  }\n\n  getProject() {\n    this.projectService.getAssociatedProject().subscribe({\n      error: error => {\n        this.errorService.errorOccurred.emit(error);\n      },\n      next: response => {\n        const resp: any = response;\n        this.project = resp.project;\n      },\n    });\n  }\n\n  deleteProject() {\n    this.projectService.deleteProject(this.project.id).subscribe({\n      error: error => {\n        this.errorService.errorOccurred.emit(error);\n      },\n      next: () => { },\n      complete: () => {\n        this.router.navigate(['/dashboard']);\n      }\n    });\n  }\n\n  addAssistent() {\n    this.isProcessed = true;\n    if (!this.addAssistentForm.value.fax && this.addAssistentForm.valid) {\n      this.projectService.promoteAssistant({attendant_email: this.addAssistentForm.value.attendant_email}).subscribe({\n        error: error => {\n          if (error.error.message == 'The given data was invalid.') {\n            for (const errorType in error.error.errors) {\n              const errors: any = [];\n              for (const errorMessage in error.error.errors[errorType]) {\n                errors.push({[error.error.errors[errorType][errorMessage]]: true});\n              }\n              console.log(this.addAssistentForm.controls)\n              this.addAssistentForm.controls[errorType].setErrors(errors);\n            }\n          } else if (error.error.message == 'missingPermissions') {\n            this.alertService.alert(\"danger\", this.translate.instant('GENERAL.ERRORS.missingPermissions'), '', 'lock-closed');\n          } else {\n            this.errorService.errorOccurred.emit(error);\n          }\n          this.isProcessed = false;\n        },\n        next: response => {\n          const resp: any = response;\n          this.alertService.alert(\"success\", this.translate.instant('ACTIONS.MANAGE_FRIENDS.title'), resp.message, \"checkmark\")\n        },\n        complete: () => {\n          this.addAssistentForm.reset()\n          this.isProcessed = false;\n          this.getProject();\n        },\n      });\n    }\n  }\n\n  async removeAssistent(id: number) {\n    const alert = await this.alertController.create({\n      header: this.translate.instant('ACTIONS.MANAGE_PROJECT.REMOVE_ASSISTANT_POPUP.alertHeader'),\n      message: this.translate.instant('ACTIONS.MANAGE_PROJECT.REMOVE_ASSISTANT_POPUP.alertText'),\n      buttons: [\n        {\n          cssClass: 'cancel-text',\n          text: this.translate.instant('GENERAL.POPUPS.cancel'),\n          role: 'cancel',\n        }, {\n          text: this.translate.instant('ACTIONS.MANAGE_PROJECT.REMOVE_ASSISTANT_POPUP.removeButton'),\n          handler: () => {\n            this.projectService.demoteAssistant(id).subscribe({\n              error: error => {\n                if (error.error.message == 'missingPermissions') {\n                  this.alertService.alert(\"danger\", this.translate.instant('GENERAL.ERRORS.missingPermissions'), '', 'lock-closed');\n                } else {\n                  this.errorService.errorOccurred.emit(error);\n                }\n              },\n              next: response => {\n                const resp: any = response;\n                this.alertService.alert(\"success\", this.translate.instant('ACTIONS.MANAGE_PROJECT.title'), resp.message, \"checkmark\")\n              },\n              complete: () => {\n                this.getProject();\n              },\n            });\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}
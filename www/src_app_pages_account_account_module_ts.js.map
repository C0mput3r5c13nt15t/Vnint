{"version":3,"file":"src_app_pages_account_account_module_ts.js","mappings":"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","sources":["./src/app/pages/account/account.page.html","./src/app/pages/account/account-routing.module.ts","./src/app/pages/account/account.module.ts","./src/app/pages/account/account.page.ts"],"sourcesContent":["export default \"<ion-content>\\n  <app-toolbar></app-toolbar>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col>\\n<!--        <app-card-title-bar [backButton]=\\\"false\\\" title=\\\"{{ 'ACCOUNT.UPDATE_ACCOUNT_INFORMATION.title' | translate }}\\\"></app-card-title-bar>\\n        <ion-card color=\\\"light\\\">\\n          <ion-card-content>\\n            <ion-grid class=\\\"inside-card-grid\\\">\\n              <ion-row>\\n                <ion-col>\\n                  <form [formGroup]=\\\"updateProfileForm\\\" (ngSubmit)=\\\"updateProfile()\\\" novalidate>\\n                    <ion-label color=\\\"danger\\\">{{ 'ACCOUNT.UPDATE_ACCOUNT_INFORMATION.warning' | translate }}<br></ion-label>\\n                    <br>\\n                    <ion-item color=\\\"light\\\">\\n                      <ion-input formControlName=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"{{ 'REGISTER.INPUT.name' | translate }}\\\"></ion-input>\\n                    </ion-item>\\n                    <app-form-error [errors]=\\\"updateProfileErrorControl.name.errors\\\"></app-form-error>\\n\\n                    <ion-item color=\\\"light\\\">\\n                      <ion-input formControlName=\\\"email\\\" type=\\\"email\\\" placeholder=\\\"{{ 'REGISTER.INPUT.email' | translate }}\\\"></ion-input>\\n                    </ion-item>\\n                    <app-form-error [errors]=\\\"updateProfileErrorControl.email.errors\\\"></app-form-error>\\n\\n                    <br><br>\\n\\n                    <ion-label>\\n                      {{ 'GENERAL.createdAt' | translate }} {{ user.created_at | date:( 'GENERAL.exactTimeDisplayFormat' | translate ):( 'GENERAL.timezone' | translate ):( 'GENERAL.locale' | translate ) }}<br>\\n                      {{ 'GENERAL.updatedAt' | translate }} {{ user.updated_at | date:( 'GENERAL.exactTimeDisplayFormat' | translate ):( 'GENERAL.timezone' | translate ):( 'GENERAL.locale' | translate ) }}<br>\\n                      <div *ngIf=\\\"user.email_verified_at\\\">\\n                        {{ 'ACCOUNT.UPDATE_ACCOUNT_INFORMATION.emailVerifiedAt' | translate }} {{ user.email_verified_at | date:( 'GENERAL.exactTimeDisplayFormat' | translate ):( 'GENERAL.timezone' | translate ):( 'GENERAL.locale' | translate ) }}\\n                      </div>\\n                      <div *ngIf=\\\"!user.email_verified_at\\\">\\n                        {{ 'ACCOUNT.UPDATE_ACCOUNT_INFORMATION.emailNotVerified' | translate }}\\n                      </div>\\n                    </ion-label>\\n\\n                    <ion-checkbox class=\\\"invisible\\\" formControlName=\\\"fax\\\"></ion-checkbox>\\n\\n                    <div class=\\\"ion-padding\\\">\\n                      <ion-button *ngIf=\\\"!isProcessed\\\" [disabled]=\\\"(user.name == updateProfileForm.value.name && user.email == updateProfileForm.value.email) || updateProfileForm.invalid || isProcessed\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\" color=\\\"primary\\\">{{ 'ACCOUNT.UPDATE_ACCOUNT_INFORMATION.INPUT.updateButton' | translate }}</ion-button>\\n                      <ion-button *ngIf=\\\"isProcessed\\\" [disabled]=\\\"updateProfileForm.invalid || isProcessed\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\" color=\\\"primary\\\"><ion-spinner name=\\\"crescent\\\"></ion-spinner></ion-button>\\n                    </div>\\n                  </form>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-card-content>\\n        </ion-card>\\n        <br><br><br>-->\\n        <app-card-title-bar [backButton]=\\\"false\\\" title=\\\"{{ 'ACCOUNT.CHANGE_PASSWORD.title' | translate }}\\\"></app-card-title-bar>\\n        <ion-card color=\\\"light\\\">\\n          <ion-card-content>\\n            <ion-grid class=\\\"inside-card-grid\\\">\\n              <ion-row>\\n                <ion-col>\\n                  <form [formGroup]=\\\"changePasswordForm\\\" (ngSubmit)=\\\"changePassword()\\\" novalidate>\\n                    <ion-item color=\\\"light\\\">\\n                      <ion-input formControlName=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"{{ 'ACCOUNT.CHANGE_PASSWORD.INPUT.password' | translate }}\\\"></ion-input>\\n                    </ion-item>\\n                    <app-form-error [errors]=\\\"changePasswordErrorControl.password.errors\\\"></app-form-error>\\n\\n                    <ion-item color=\\\"light\\\">\\n                      <ion-input formControlName=\\\"password_confirmation\\\" type=\\\"password\\\" placeholder=\\\"{{ 'ACCOUNT.CHANGE_PASSWORD.INPUT.passwordConfirmation' | translate }}\\\"></ion-input>\\n                    </ion-item>\\n                    <app-form-error [errors]=\\\"changePasswordErrorControl.password_confirmation.errors\\\"></app-form-error>\\n\\n                    <ion-item color=\\\"light\\\">\\n                      <ion-input formControlName=\\\"current_password\\\" type=\\\"password\\\" placeholder=\\\"{{ 'ACCOUNT.CHANGE_PASSWORD.INPUT.currentPassword' | translate }}\\\"></ion-input>\\n                    </ion-item>\\n                    <app-form-error [errors]=\\\"changePasswordErrorControl.current_password.errors\\\"></app-form-error>\\n\\n                    <ion-checkbox class=\\\"invisible\\\" formControlName=\\\"fax\\\"></ion-checkbox>\\n\\n                    <div class=\\\"ion-padding\\\">\\n                      <ion-button *ngIf=\\\"!isProcessed\\\" [disabled]=\\\"changePasswordForm.invalid || isProcessed\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\" color=\\\"primary\\\">{{ 'ACCOUNT.CHANGE_PASSWORD.INPUT.changeButton' | translate }}</ion-button>\\n                      <ion-button *ngIf=\\\"isProcessed\\\" [disabled]=\\\"changePasswordForm.invalid || isProcessed\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\" color=\\\"primary\\\"><ion-spinner name=\\\"crescent\\\"></ion-spinner></ion-button>\\n                    </div>\\n                  </form>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-card-content>\\n        </ion-card>\\n        <br><br><br>\\n        <app-card-title-bar color=\\\"danger\\\" [backButton]=\\\"false\\\" title=\\\"{{ 'ACCOUNT.DELETE_ACCOUNT.title' | translate }}\\\"></app-card-title-bar>\\n        <ion-card color=\\\"light\\\">\\n          <ion-card-content>\\n            <ion-grid class=\\\"inside-card-grid\\\">\\n              <ion-row>\\n                <ion-col>\\n                  <ion-label color=\\\"danger\\\">{{ 'ACCOUNT.DELETE_ACCOUNT.warning' | translate }}<br></ion-label>\\n                  <br>\\n                  <div class=\\\"ion-padding\\\">\\n                    <ion-button color=\\\"danger\\\" disabled=\\\"true\\\" expand=\\\"block\\\" (click)=\\\"deleteAccount()\\\" class=\\\"ion-no-margin\\\">{{ 'ACCOUNT.DELETE_ACCOUNT.INPUT.deleteButton' | translate }}</ion-button>\\n                  </div>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AccountPage } from './account.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AccountPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AccountPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\n\nimport { AccountPageRoutingModule } from './account-routing.module';\nimport { ComponentsModule } from '../../components/components.module';\n\nimport { AccountPage } from './account.page';\n\nimport {createTranslateLoader} from \"src/app/app.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AccountPageRoutingModule,\n    ReactiveFormsModule,\n    ComponentsModule,\n    TranslateModule.forChild({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient]\n      }\n    })\n  ],\n  declarations: [AccountPage]\n})\nexport class AccountPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AlertController } from '@ionic/angular';\nimport { AuthService } from 'src/app/services/auth.service'\nimport { TranslateService } from '@ngx-translate/core';\nimport { User } from 'src/app/interfaces/user';\nimport { ErrorService } from 'src/app/services/error.service';\nimport {AlertService} from \"../../services/alert.service\";\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.page.html',\n  styleUrls: ['./account.page.scss'],\n})\nexport class AccountPage implements OnInit {\n  updateProfileForm: FormGroup;\n  changePasswordForm: FormGroup;\n  isProcessed = false;\n\n  user: User = {\n    id: 0,\n    name: 'Not yet loaded',\n    email: 'Not yet loaded',\n    email_verified_at: null,\n    project_id: 0,\n    created_at: null,\n    updated_at: null,\n  };\n\n  constructor(public formBuilder: FormBuilder,\n              private auth: AuthService,\n              private alertController: AlertController,\n              private translate: TranslateService,\n              private errorService: ErrorService,\n              private alertService: AlertService) { }\n\n  ngOnInit() {\n    this.updateProfileForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', Validators.required],\n      fax: ['']\n    });\n    this.changePasswordForm = this.formBuilder.group({\n      password: ['', Validators.required],\n      password_confirmation: ['', Validators.required],\n      current_password: ['', Validators.required],\n      fax: ['']\n    });\n  }\n\n  ionViewWillEnter() {\n    this.isProcessed = false;\n    this.getUser();\n  }\n\n  get updateProfileErrorControl() {\n    return this.updateProfileForm.controls;\n  }\n\n  get changePasswordErrorControl() {\n    return this.changePasswordForm.controls;\n  }\n\n  getUser() {\n    this.auth.user().subscribe({\n      error: error => {\n        this.errorService.errorOccurred.emit(error);\n      },\n      next: response => {\n        const resp: any = response;\n        this.user = JSON.parse(JSON.stringify(resp.user));\n        this.updateProfileForm.patchValue(resp.user);\n      },\n    });\n  }\n\n  updateProfile() {\n    if (!this.isProcessed && !this.updateProfileForm.value.fax && !(this.user.name == this.updateProfileForm.value.name && this.user.email == this.updateProfileForm.value.email)) {\n      this.isProcessed = true;\n      if (!this.updateProfileForm.valid) {\n        return false;\n      } else {\n        this.auth.updateProfile(this.updateProfileForm.value).subscribe({\n          error: error => {\n            if (error.error.message == 'The given data was invalid.') {\n              for (const errorType in error.error.errors) {\n                let errors: any = [];\n                for (const errorMessage in error.error.errors[errorType]) {\n                  errors.push({[error.error.errors[errorType][errorMessage]]: true})\n                }\n                this.updateProfileForm.controls[errorType].setErrors(errors)\n              }\n            } else if (error.error.message == 'missingPermissions') {\n              this.alertService.alert(\"danger\", this.translate.instant('GENERAL.ERRORS.missingPermissions'), '', 'lock-closed');\n            } else {\n              this.errorService.errorOccurred.emit(error);\n            }\n            this.isProcessed = false;\n          },\n          next: () => {},\n          complete: () => {\n            this.updateProfileForm.reset();\n            this.getUser();\n            this.isProcessed = false;\n            this.auth.authChanged.emit('account updated');\n          },\n        });\n      }\n    }\n  }\n\n  changePassword() {\n    if (!this.isProcessed && !this.changePasswordForm.value.fax) {\n      this.isProcessed = true;\n      if (!this.changePasswordForm.valid) {\n        return false;\n      } else {\n        this.auth.changePassword(this.changePasswordForm.value).subscribe({\n          error: error => {\n            if (error.error.message == 'The given data was invalid.') {\n              for (const errorType in error.error.errors) {\n                let errors: any = [];\n                for (const errorMessage in error.error.errors[errorType]) {\n                  errors.push({[error.error.errors[errorType][errorMessage]]: true})\n                }\n                this.changePasswordForm.controls[errorType].setErrors(errors)\n              }\n            } else if (error.error.message == 'missingPermissions') {\n              this.alertService.alert(\"danger\", this.translate.instant('GENERAL.ERRORS.missingPermissions'), '', 'lock-closed');\n            } else {\n              this.errorService.errorOccurred.emit(error);\n            }\n            this.isProcessed = false;\n          },\n          next: response => {\n            let resp: any = response;\n            this.alertService.alert(\"success\", this.translate.instant('ACCOUNT.CHANGE_PASSWORD.title'), resp.message, 'checkmark')\n          },\n          complete: () => {\n            this.changePasswordForm.reset();\n            this.isProcessed = false;\n          },\n        });\n      }\n    }\n  }\n\n  async deleteAccount() {\n    const alert = await this.alertController.create({\n      header: this.translate.instant('ACCOUNT.DELETE_ACCOUNT.INPUT.alertHeader'),\n      message: this.translate.instant('ACCOUNT.DELETE_ACCOUNT.INPUT.alertText'),\n      buttons: [\n        {\n          cssClass: 'cancel-text',\n          text: this.translate.instant('GENERAL.POPUPS.cancel'),\n          role: 'cancel',\n        }, {\n          text: this.translate.instant('ACCOUNT.DELETE_ACCOUNT.INPUT.deleteButton'),\n          handler: () => {\n            console.log('Confirm Okay');\n            console.log('Delete account ... (not yet implemented)');\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}
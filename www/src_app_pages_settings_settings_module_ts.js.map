{"version":3,"file":"src_app_pages_settings_settings_module_ts.js","mappings":"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","sources":["./src/app/pages/settings/settings.page.html","./src/app/pages/settings/settings-routing.module.ts","./src/app/pages/settings/settings.module.ts","./src/app/pages/settings/settings.page.ts"],"sourcesContent":["export default \"<ion-content>\\n  <app-toolbar></app-toolbar>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col>\\n        <app-card-title-bar [backButton]=\\\"!auth.getLoggedIn\\\" title=\\\"{{ 'SETTINGS.title' | translate }}\\\"></app-card-title-bar>\\n        <ion-card color=\\\"light\\\">\\n          <ion-card-content>\\n            <ion-item lines=\\\"none\\\" color=\\\"light\\\">\\n              <ion-label>{{ 'SETTINGS.APPEARANCE.chooseLanguage' | translate }}</ion-label>\\n              <ion-select [value]=\\\"translateService.currentLang\\\" [(ngModel)]=\\\"language\\\" (ionChange)=\\\"languageChange()\\\">\\n                <ion-select-option value=\\\"de\\\">DE ðŸ‡©ðŸ‡ª</ion-select-option>\\n                <ion-select-option value=\\\"en\\\">GB ðŸ‡¬ðŸ‡§</ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n            <div *ngIf=\\\"notSupported\\\">\\n              <div class=\\\"error\\\">\\n                <span>\\n                  <ion-label color=\\\"danger\\\">{{ 'SETTINGS.notSupported' | translate }}</ion-label><br>\\n                </span>\\n              </div>\\n            </div>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n  <app-footer class=\\\"fixed-footer\\\"></app-footer>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport {  HttpClient } from '@angular/common/http';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\n\nimport { SettingsPageRoutingModule } from './settings-routing.module';\nimport { ComponentsModule } from '../../components/components.module';\n\nimport { SettingsPage } from './settings.page';\n\nimport {createTranslateLoader} from \"src/app/app.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SettingsPageRoutingModule,\n    ComponentsModule,\n    TranslateModule.forChild({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient]\n      }\n    })\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ErrorService } from 'src/app/services/error.service';\nimport {StyleService} from '../../services/style.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n  language = 'de';\n  timezone = 'Europe/Berlin';\n  notSupported = false;\n\n  constructor(public translateService: TranslateService,\n              private cookieService: CookieService,\n              public auth: AuthService,\n              private errorService: ErrorService,\n              public styleService: StyleService) { }\n\n  ngOnInit() {\n    if (this.translateService.currentLang) {\n      this.language = this.translateService.currentLang;\n    } else {\n      this.language = this.translateService.defaultLang;\n    }\n  }\n\n  ionViewWillEnter() {\n    this.auth.authenticated().subscribe({\n      next: response => {\n        const authenticated: any = response;\n        if (authenticated.authenticated == true) {\n          this.auth.setLoggedIn = true;\n        }\n      },\n    });\n    this.setApiLanguage();\n  }\n\n  languageChange() {\n    this.cookieService.set('language', this.language, 365);\n    this.translateService.use(this.language);\n    this.setApiLanguage();\n  }\n\n  themeChange(){\n    this.styleService.updateDarkMode();\n  }\n\n  setApiLanguage() {\n    this.notSupported = false;\n    this.auth.setAPILanguage(this.language).subscribe({\n      error: error => {\n        if (error.error.message == 'languageNotSupported') {\n          this.notSupported = true;\n        } else {\n          this.errorService.errorOccurred.emit(error);\n        }\n      },\n      next: () => {}});\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}
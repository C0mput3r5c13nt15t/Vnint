{"version":3,"file":"src_app_pages_actions_project_edit-project_edit-project_module_ts.js","mappings":";;;;;;;;;;;;;AAAA,iEAAe,oIAAoI,2CAA2C,8WAA8W,iDAAiD,sFAAsF,kCAAkC,mBAAmB,sCAAsC,qIAAqI,YAAY,MAAM,cAAc,wOAAwO,iDAAiD,gTAAgT,uDAAuD,qQAAqQ,gDAAgD,2WAA2W,qDAAqD,4wBAA4wB,iBAAiB,iBAAiB,oCAAoC,mBAAmB,sCAAsC,mSAAmS,iBAAiB,iBAAiB,oCAAoC,mBAAmB,sCAAsC,o4CAAo4C,iDAAiD,yIAAyI,gDAAgD,4UAA4U,iDAAiD,4ZAA4Z,oDAAoD,yIAAyI,gDAAgD,gUAAgU,iDAAiD,idAAid,wDAAwD,2QAA2Q;;;;;;;;;;;;;;ACA/xO;AACf;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;ACTe;AACf;AACA;AACA;AACA;;;;;;;;;;;;;;ACJe;AACf;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEO;;;;;;;;;;;;;;;;;ACtHiC;AACuB;AACN;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,WAAW,oBAAoB;AAC/B,WAAW,0BAA0B;AACrC,aAAa,QAAQ;AACrB,YAAY,WAAW;AACvB,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,iBAAiB;AACjF;AACA;AACA;AACA;AACA,gEAAgE,wBAAwB;AACxF;AACA;AACA;AACA;AACA,gEAAgE,wBAAwB;AACxF;AACA;;AAEe;AACf,EAAE,sEAAY;AACd,qBAAqB,4DAAM;;AAE3B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDAAwD;;AAExD;AACA,cAAc,yEAAe;AAC7B,gBAAgB,yEAAe;AAC/B,eAAe,yEAAe,iCAAiC;;AAE/D;AACA,IAAI;;;AAGJ;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,yEAAe;AACtC,yBAAyB,yEAAe,0BAA0B;;AAElE;AACA;AACA,MAAM;AACN;AACA;;AAEA,eAAe,yEAAe;AAC9B,iBAAiB,yEAAe;AAChC,iBAAiB,yEAAe,gCAAgC;;AAEhE,8CAA8C;;AAE9C,2DAA2D;;AAE3D;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACtGiF;AACxB;AACN;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB,YAAY,WAAW;AACvB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,qBAAqB;AAC/D;AACA;;AAEe;AACf,EAAE,sEAAY;AACd;AACA,gEAAgE,mEAAS;;AAEzE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ,gDAAgD;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE;AACxE,sBAAsB,EAAE,sBAAsB,EAAE,wBAAwB,EAAE;AAC1E,gCAAgC,EAAE,UAAU,EAAE;;AAE9C;AACA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mCAAmC,EAAE,SAAS,+BAA+B,OAAO,EAAE,SAAS,+BAA+B;AAC9H,0CAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA,4DAA4D;;AAE5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,mEAAkB,aAAa,qEAAoB;AACpE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yBAAyB,mEAAkB,aAAa,qEAAoB;AAC5E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AA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","sources":["./src/app/pages/actions/project/edit-project/edit-project.page.html","./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","./node_modules/date-fns/esm/_lib/requiredArgs/index.js","./node_modules/date-fns/esm/_lib/toInteger/index.js","./node_modules/date-fns/esm/constants/index.js","./node_modules/date-fns/esm/formatISO/index.js","./node_modules/date-fns/esm/parseISO/index.js","./node_modules/date-fns/esm/toDate/index.js","./src/app/pages/actions/project/edit-project/edit-project-routing.module.ts","./src/app/pages/actions/project/edit-project/edit-project.module.ts","./src/app/pages/actions/project/edit-project/edit-project.page.ts"],"sourcesContent":["export default \"<ion-content>\\n  <app-toolbar></app-toolbar>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col>\\n        <app-card-title-bar title=\\\"{{ 'ACTIONS.EDIT_PROJECT.title' | translate }}\\\"></app-card-title-bar>\\n        <ion-card color=\\\"light\\\">\\n          <ion-card-content>\\n            <ion-grid class=\\\"inside-card-grid\\\">\\n              <ion-row>\\n                <ion-col>\\n                  <form [formGroup]=\\\"editProjectForm\\\" (ngSubmit)=\\\"editProject()\\\">\\n                    <ion-item color=\\\"light\\\">\\n                      <ion-label>{{ 'ACTIONS.EDIT_PROJECT.INPUT.topic' | translate }}</ion-label>\\n                      <ion-select formControlName=\\\"topic\\\" okText=\\\"{{ 'GENERAL.POPUPS.ok' | translate }}\\\" cancelText=\\\"{{ 'GENERAL.POPUPS.cancel' | translate }}\\\">\\n                        <ion-select-option *ngFor=\\\"let topic of ('GENERAL.PROJECT_TOPICS' | translate) | keyvalue\\\" value=\\\"{{ topic.key }}\\\">{{ topic.value }}</ion-select-option>\\n                      </ion-select>\\n                    </ion-item>\\n\\n                    <ion-item color=\\\"light\\\">\\n                      <ion-input formControlName=\\\"title\\\" type=\\\"text\\\" placeholder=\\\"{{ 'ACTIONS.EDIT_PROJECT.INPUT.title' | translate }}\\\"></ion-input>\\n                    </ion-item>\\n                    <app-form-error [errors]=\\\"errorControl.title.errors\\\"></app-form-error>\\n\\n                    <ion-item color=\\\"light\\\">\\n                      <ion-textarea formControlName=\\\"description\\\" type=\\\"text\\\" rows=\\\"7\\\" placeholder=\\\"{{ 'ACTIONS.EDIT_PROJECT.INPUT.description' | translate }}\\\"></ion-textarea>\\n                    </ion-item>\\n                    <app-form-error [errors]=\\\"errorControl.description.errors\\\"></app-form-error>\\n\\n                    <ion-item color=\\\"light\\\">\\n                      <ion-label position=\\\"floating\\\">{{ 'ACTIONS.EDIT_PROJECT.INPUT.cost' | translate }}</ion-label>\\n                      <ion-input formControlName=\\\"cost\\\" type=\\\"text\\\"></ion-input>\\n                    </ion-item>\\n                    <app-form-error [errors]=\\\"errorControl.cost.errors\\\"></app-form-error>\\n\\n                    <ion-list>\\n                      <ion-item lines=\\\"none\\\" color=\\\"light\\\">\\n                        <ion-label>{{ 'ACTIONS.EDIT_PROJECT.INPUT.timeframe' | translate }}</ion-label>\\n                      </ion-item>\\n                      <div class=\\\"addTimeframeCards\\\">\\n                        <ion-grid class=\\\"inside-card-grid\\\">\\n                          <ion-row>\\n                            <ng-container *ngFor=\\\"let timeframe of timeframes\\\">\\n                              <ion-col sizeXl=\\\"6\\\" sizeLg=\\\"6\\\" sizeMd=\\\"12\\\" sizeSm=\\\"12\\\" sizeXs=\\\"12\\\">\\n                                <ion-card color=\\\"light\\\">\\n                                  <ion-card-content>\\n                                    <ion-datetime minuteValues=\\\"0,5,10,15,20,25,30,35,40,45,50,55\\\" color=\\\"primary\\\" [hourCycle]=\\\"( 'GENERAL.hourCycle' | translate )\\\" [locale]=\\\"( 'GENERAL.locale' | translate )\\\" [(ngModel)]=\\\"timeframe.from\\\" [ngModelOptions]=\\\"{standalone: true}\\\" doneText=\\\"{{ 'GENERAL.POPUPS.done' | translate }}\\\" cancelText=\\\"{{ 'GENERAL.POPUPS.cancel' | translate }}\\\"></ion-datetime>\\n\\n                                    <ion-datetime minuteValues=\\\"0,5,10,15,20,25,30,35,40,45,50,55\\\" color=\\\"primary\\\" [hourCycle]=\\\"( 'GENERAL.hourCycle' | translate )\\\" [locale]=\\\"( 'GENERAL.locale' | translate )\\\" [(ngModel)]=\\\"timeframe.until\\\" [ngModelOptions]=\\\"{standalone: true}\\\" doneText=\\\"{{ 'GENERAL.POPUPS.done' | translate }}\\\" cancelText=\\\"{{ 'GENERAL.POPUPS.cancel' | translate }}\\\"></ion-datetime>\\n                                  </ion-card-content>\\n\\n                                  <div class=\\\"ion-padding\\\">\\n                                    <ion-button color=\\\"danger\\\" (click)=\\\"deleteTimeframe(timeframe)\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\">delete</ion-button>\\n                                  </div>\\n                                </ion-card>\\n                              </ion-col>\\n                            </ng-container>\\n                            <ion-col>\\n                              <ion-card color=\\\"light\\\">\\n                                <div>\\n                                  <ion-fab horizontal=\\\"center\\\" vertical=\\\"center\\\" slot=\\\"fixed\\\">\\n                                  <ion-fab-button color=\\\"light\\\" (click)=\\\"addTimeframe()\\\">\\n                                    <ion-icon name=\\\"add\\\"></ion-icon>\\n                                  </ion-fab-button>\\n                                </ion-fab>\\n                                </div>\\n                              </ion-card>\\n                            </ion-col>\\n                          </ion-row>\\n                        </ion-grid>\\n                      </div>\\n                      <br><hr>\\n                    </ion-list>\\n\\n                    <ion-list>\\n                      <ion-item lines=\\\"none\\\" color=\\\"light\\\">\\n                        <ion-label>{{ 'ACTIONS.EDIT_PROJECT.INPUT.grade' | translate }}</ion-label>\\n                      </ion-item>\\n                      <ion-item color=\\\"light\\\">\\n                        <ion-label>{{ 'ACTIONS.EDIT_PROJECT.INPUT.from' | translate }}</ion-label>\\n                        <ion-input formControlName=\\\"min_grade\\\" type=\\\"text\\\"></ion-input>\\n                      </ion-item>\\n                      <app-form-error [errors]=\\\"errorControl.min_grade.errors\\\"></app-form-error>\\n\\n                      <ion-item color=\\\"light\\\">\\n                        <ion-label>{{ 'ACTIONS.EDIT_PROJECT.INPUT.until' | translate }}</ion-label>\\n                        <ion-input formControlName=\\\"max_grade\\\" type=\\\"text\\\"></ion-input>\\n                      </ion-item>\\n                      <app-form-error [errors]=\\\"errorControl.max_grade.errors\\\"></app-form-error>\\n                    </ion-list>\\n\\n                    <ion-list>\\n                      <ion-item lines=\\\"none\\\" color=\\\"light\\\">\\n                        <ion-label>{{ 'ACTIONS.EDIT_PROJECT.INPUT.capacity' | translate }}</ion-label>\\n                      </ion-item>\\n                      <ion-item color=\\\"light\\\">\\n                        <ion-label>{{ 'ACTIONS.EDIT_PROJECT.INPUT.from' | translate }}</ion-label><ion-input formControlName=\\\"min_participants\\\" type=\\\"number\\\"></ion-input>\\n                      </ion-item>\\n                      <app-form-error [errors]=\\\"errorControl.min_participants.errors\\\"></app-form-error>\\n                      <ion-item color=\\\"light\\\">\\n                        <ion-label>{{ 'ACTIONS.EDIT_PROJECT.INPUT.until' | translate }}</ion-label><ion-input formControlName=\\\"max_participants\\\" type=\\\"number\\\"></ion-input>\\n                      </ion-item>\\n                      <app-form-error [errors]=\\\"errorControl.max_participants.errors\\\"></app-form-error>\\n                    </ion-list>\\n                    <div class=\\\"ion-padding\\\">\\n                      <ion-button color=\\\"primary\\\" [disabled]=\\\"editProjectForm.invalid\\\" expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\">{{ 'ACTIONS.EDIT_PROJECT.INPUT.submitButton' | translate }}</ion-button>\\n                    </div>\\n                  </form>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","/**\n * Days in 1 week.\n *\n * @name daysInWeek\n * @constant\n * @type {number}\n * @default\n */\nexport var daysInWeek = 7;\n/**\n * Maximum allowed time.\n *\n * @name maxTime\n * @constant\n * @type {number}\n * @default\n */\n\nexport var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n/**\n * Milliseconds in 1 minute\n *\n * @name millisecondsInMinute\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInMinute = 60000;\n/**\n * Milliseconds in 1 hour\n *\n * @name millisecondsInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInHour = 3600000;\n/**\n * Milliseconds in 1 second\n *\n * @name millisecondsInSecond\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInSecond = 1000;\n/**\n * Minimum allowed time.\n *\n * @name minTime\n * @constant\n * @type {number}\n * @default\n */\n\nexport var minTime = -maxTime;\n/**\n * Minutes in 1 hour\n *\n * @name minutesInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var minutesInHour = 60;\n/**\n * Months in 1 quarter\n *\n * @name monthsInQuarter\n * @constant\n * @type {number}\n * @default\n */\n\nexport var monthsInQuarter = 3;\n/**\n * Months in 1 year\n *\n * @name monthsInYear\n * @constant\n * @type {number}\n * @default\n */\n\nexport var monthsInYear = 12;\n/**\n * Quarters in 1 year\n *\n * @name quartersInYear\n * @constant\n * @type {number}\n * @default\n */\n\nexport var quartersInYear = 4;\n/**\n * Seconds in 1 hour\n *\n * @name secondsInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInHour = 3600;\n/**\n * Seconds in 1 minute\n *\n * @name secondsInMinute\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInMinute = 60;","import toDate from \"../toDate/index.js\";\nimport addLeadingZeros from \"../_lib/addLeadingZeros/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatISO\n * @category Common Helpers\n * @summary Format the date according to the ISO 8601 standard (https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).\n *\n * @description\n * Return the formatted date string in ISO 8601 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.\n * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time with local time zone, or both.\n * @returns {String} the formatted date string (in local time zone)\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.format` must be 'extended' or 'basic'\n * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format (local time zone is UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18T19:00:52Z'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601, short format (local time zone is UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918T190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, date only:\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, time only (local time zone is UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52Z'\n */\n\nexport default function formatISO(date, options) {\n  requiredArgs(1, arguments);\n  var originalDate = toDate(date);\n\n  if (isNaN(originalDate.getTime())) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var format = !(options !== null && options !== void 0 && options.format) ? 'extended' : String(options.format);\n  var representation = !(options !== null && options !== void 0 && options.representation) ? 'complete' : String(options.representation);\n\n  if (format !== 'extended' && format !== 'basic') {\n    throw new RangeError(\"format must be 'extended' or 'basic'\");\n  }\n\n  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {\n    throw new RangeError(\"representation must be 'date', 'time', or 'complete'\");\n  }\n\n  var result = '';\n  var tzOffset = '';\n  var dateDelimiter = format === 'extended' ? '-' : '';\n  var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'\n\n  if (representation !== 'time') {\n    var day = addLeadingZeros(originalDate.getDate(), 2);\n    var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n    var year = addLeadingZeros(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.\n\n    result = \"\".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);\n  } // Representation is either 'time' or 'complete'\n\n\n  if (representation !== 'date') {\n    // Add the timezone.\n    var offset = originalDate.getTimezoneOffset();\n\n    if (offset !== 0) {\n      var absoluteOffset = Math.abs(offset);\n      var hourOffset = addLeadingZeros(Math.floor(absoluteOffset / 60), 2);\n      var minuteOffset = addLeadingZeros(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.\n\n      var sign = offset < 0 ? '+' : '-';\n      tzOffset = \"\".concat(sign).concat(hourOffset, \":\").concat(minuteOffset);\n    } else {\n      tzOffset = 'Z';\n    }\n\n    var hour = addLeadingZeros(originalDate.getHours(), 2);\n    var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n    var second = addLeadingZeros(originalDate.getSeconds(), 2); // If there's also date, separate it with time with 'T'\n\n    var separator = result === '' ? '' : 'T'; // Creates a time string consisting of hour, minute, and second, separated by delimiters, if defined.\n\n    var time = [hour, minute, second].join(timeDelimiter); // HHmmss or HH:mm:ss.\n\n    result = \"\".concat(result).concat(separator).concat(time).concat(tzOffset);\n  }\n\n  return result;\n}","import { millisecondsInHour, millisecondsInMinute } from \"../constants/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? 2 : toInteger(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time)) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n\n    var result = new Date(0);\n    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());\n    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString; // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: NaN,\n    restDateString: ''\n  };\n  var year = captures[1] ? parseInt(captures[1]) : null;\n  var century = captures[2] ? parseInt(captures[2]) : null; // either year or century is null, not both\n\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return new Date(NaN);\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditProjectPage } from './edit-project.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditProjectPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditProjectPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\n\nimport { EditProjectPageRoutingModule } from './edit-project-routing.module';\nimport { ComponentsModule } from '../../../../components/components.module';\n\nimport { EditProjectPage } from './edit-project.page';\n\nimport {createTranslateLoader} from \"src/app/app.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EditProjectPageRoutingModule,\n    ComponentsModule,\n    ReactiveFormsModule,\n    TranslateModule.forChild({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient]\n      }\n    }),\n  ],\n  declarations: [EditProjectPage]\n})\nexport class EditProjectPageModule {}\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ProjectService } from 'src/app/services/project.service';\nimport { Timeframe } from 'src/app/interfaces/timeframe';\nimport { TimeframeService } from 'src/app/services/timeframe.service';\nimport { ErrorService } from 'src/app/services/error.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {formatISO, parseISO} from \"date-fns\";\nimport {AlertService} from \"../../../../services/alert.service\";\n\n@Component({\n  selector: 'app-edit-project',\n  templateUrl: './edit-project.page.html',\n  styleUrls: ['./edit-project.page.scss'],\n})\nexport class EditProjectPage implements OnInit {\n  editProjectForm: FormGroup;\n  isProcessed = false;\n  timeframes: Timeframe[] = [];\n  deleteTimeframes: Timeframe[] = [];\n\n  constructor(private projectService: ProjectService,\n              private timeframeService: TimeframeService,\n              private formBuilder: FormBuilder,\n              private router: Router,\n              private errorService: ErrorService,\n              private translate: TranslateService,\n              private alertService: AlertService) { }\n\n  ngOnInit() {\n    this.editProjectForm = this.formBuilder.group({\n      topic: ['', Validators.required],\n      title: ['', Validators.required],\n      image: null,\n      description: ['', Validators.required],\n      cost: ['', Validators.required],\n      min_grade: ['', Validators.required],\n      max_grade: ['', Validators.required],\n      min_participants: ['', Validators.required],\n      max_participants: ['', Validators.required],\n    });\n  }\n\n  ionViewWillEnter() {\n    this.isProcessed = false;\n    this.getProject();\n  }\n\n  get errorControl() {\n    return this.editProjectForm.controls;\n  }\n\n  getProject() {\n    this.projectService.getAssociatedProject().subscribe({\n      error: error => {\n        this.errorService.errorOccurred.emit(error);\n      },\n      next: response => {\n        const resp: any = response;\n        for (const timeframe of resp.project.timeframes) {\n          const fromCopy = new Date(parseISO(timeframe.from).getTime());\n          fromCopy.setHours(fromCopy.getHours() - 2);\n          timeframe.from = formatISO(fromCopy);\n          const untilCopy = new Date(parseISO(timeframe.until).getTime());\n          untilCopy.setHours(untilCopy.getHours() - 2);\n          timeframe.until = formatISO(untilCopy);\n        }\n        this.editProjectForm.patchValue(resp.project);\n        if (resp.project.timeframes) {\n          this.timeframes = resp.project.timeframes;\n        }\n\n      },\n    });\n  }\n\n  editProject() {\n    if (!this.isProcessed && this.editProjectForm.valid) {\n      this.isProcessed = true;\n\n      this.updateProject();\n\n      this.timeframes.forEach(timeframe => {\n        if (!timeframe.id) {\n          this.timeframeService.createTimeframe(timeframe).subscribe({\n            error: error => {\n              if (error.error.message == 'The given data was invalid.') {\n                for (const errorType in error.error.errors) {\n                  for (const errorMessage in error.error.errors[errorType]) {\n                    this.alertService.alert(\"danger\", this.translate.instant('ACTIONS.EDIT_PROJECT.title'), error.error.errors[errorType][errorMessage], 'close');\n                  }\n                }\n\n              } else if (error.error.message == 'missingPermissions') {\n                this.alertService.alert(\"danger\", this.translate.instant('GENERAL.ERRORS.missingPermissions'), '', 'lock-closed');\n              } else {\n                this.errorService.errorOccurred.emit(error);\n              }\n            }\n          });\n        } else {\n          this.timeframeService.updateTimeframe(timeframe).subscribe({\n            error: error => {\n              if (error.error.message == 'The given data was invalid.') {\n                for (const errorType in error.error.errors) {\n                  for (const errorMessage in error.error.errors[errorType]) {\n                    this.alertService.alert(\"danger\", this.translate.instant('ACTIONS.EDIT_PROJECT.title'), error.error.errors[errorType][errorMessage], 'close');\n                  }\n                }\n\n              } else if (error.error.message == 'missingPermissions') {\n                this.alertService.alert(\"danger\", this.translate.instant('GENERAL.ERRORS.missingPermissions'), '', 'lock-closed');\n              } else {\n                this.errorService.errorOccurred.emit(error);\n              }\n            }\n          });\n        }\n      });\n\n      this.deleteTimeframes.forEach(timeframe => {\n        this.timeframeService.deleteTimeframe(timeframe.id).subscribe({\n          error: error => {\n            if (error.error.message == 'The given data was invalid.') {\n              for (const errorType in error.error.errors) {\n                for (const errorMessage in error.error.errors[errorType]) {\n                  this.alertService.alert(\"danger\", this.translate.instant('ACTIONS.EDIT_PROJECT.title'), error.error.errors[errorType][errorMessage], 'close');\n                }\n              }\n\n            } else if (error.error.message == 'missingPermissions') {\n              this.alertService.alert(\"danger\", this.translate.instant('GENERAL.ERRORS.missingPermissions'), '', 'lock-closed');\n            } else {\n              this.errorService.errorOccurred.emit(error);\n            }\n          }\n        });\n      });\n    }\n  }\n\n  updateProject() {\n    this.projectService.updateProject(this.editProjectForm.value).subscribe({\n      error: error => {\n        if (error.error.message == 'The given data was invalid.') {\n          for (const errorType in error.error.errors) {\n            const errors: any = [];\n            for (const errorMessage in error.error.errors[errorType]) {\n              errors.push({[error.error.errors[errorType][errorMessage]]: true});\n            }\n            this.editProjectForm.controls[errorType].setErrors(errors);\n          }\n\n        } else if (error.error.message == 'missingPermissions') {\n          this.alertService.alert(\"danger\", this.translate.instant('GENERAL.ERRORS.missingPermissions'), '', 'lock-closed');\n        } else {\n          this.errorService.errorOccurred.emit(error);\n        }\n        this.isProcessed = false;\n      },\n      next: response => {\n        const resp: any = response;\n        this.alertService.alert(\"success\", this.translate.instant('ACTIONS.EDIT_PROJECT.title'), resp.message, \"checkmark\")\n      },\n      complete: () => {\n        this.editProjectForm.reset();\n        this.isProcessed = false;\n        this.router.navigate(['/manage-project']);\n      },\n    });\n  }\n\n  addTimeframe() {\n    this.timeframes.push({from: null, until: null});\n  }\n\n  deleteTimeframe(timeframe) {\n    if (timeframe.id) {\n      this.deleteTimeframes.push(timeframe);\n      this.timeframes = this.timeframes.filter(loopTimeframe => {return loopTimeframe.id != timeframe.id;});\n    } else {\n      this.timeframes = this.timeframes.filter(loopTimeframe => {return loopTimeframe != timeframe;});\n    }\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}